/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.aldorsolutions.dashboard.struts.action.acct;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.aldorassist.webfdms.dao.LocationEmailDAO;
import com.aldorassist.webfdms.model.LocationEmailDTO;
import com.aldorsolutions.dashboard.struts.form.acct.AcctLocationEmailForm;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 05-16-2007
 * 
 * XDoclet definition:
 * @struts.action path="/acctLocationEmailSave" name="acctLocationEmailForm" input="acct.locationEmail" scope="request" validate="true"
 */
public class AcctLocationEmailSaveAction extends Action {
	
	Logger logger = Logger.getLogger(AcctLocationEmailSaveAction.class);


	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		AcctLocationEmailForm myForm = (AcctLocationEmailForm) form;
		
		String button = myForm.getSubmitButton();
		ActionMessages errors = new ActionMessages();
		
		HttpSession session =  request.getSession();
        DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);

        try {
        	LocationEmailDAO locManager = new LocationEmailDAO(user);
            LocationEmailDTO locationEmail = locManager.getLocationEmail(myForm.getLocationEmailID());
            
    		locationEmail.setCompanyID(myForm.getCompanyID());
    		locationEmail.setEmailAddress(myForm.getEmailAddress());
    		locationEmail.setEmailType(myForm.getEmailType());
    		locationEmail.setLocaleID(myForm.getLocaleID());
    		locationEmail.setLocationEmailID(myForm.getLocationEmailID());
    		locationEmail.setLocationID(myForm.getLocationID());
    		
    		if ( "Delete".equals(button) ) {
    			locManager.deleteLocationEmail(locationEmail.getLocationEmailID());
    		} else {
    			locManager.updateLocationEmail(locationEmail);
    		}
        } catch ( Exception e ) {
        	errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.exception", e.getMessage()) );
			saveMessages(request, errors);
			e.printStackTrace();
			return (mapping.getInputForward());
        }
		
		return ( mapping.findForward("success"));
	}
}