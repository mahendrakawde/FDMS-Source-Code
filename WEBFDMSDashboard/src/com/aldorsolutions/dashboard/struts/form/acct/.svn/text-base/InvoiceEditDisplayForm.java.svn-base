/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 * CJongs
 */
package com.aldorsolutions.dashboard.struts.form.acct;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.util.LabelValueBean;

import com.aldorassist.webfdms.dao.InvoiceDAO;
import com.aldorassist.webfdms.delegate.InvoiceManager;
import com.aldorassist.webfdms.model.InvoiceDTO;
import com.aldorassist.webfdms.model.notpersisted.InvoiceInventoryItemLinePO;
import com.aldorsolutions.webfdms.admin.user.bean.UserManagerBean;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.beans.FdmsDb;
import com.aldorsolutions.webfdms.checkwriter.dao.ApVendorDAO;
import com.aldorsolutions.webfdms.checkwriter.dao.ApVendorLocationDAO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorDTO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorLocationDTO;
import com.aldorsolutions.webfdms.util.FormatDate;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 09-24-2007
 * 
 * XDoclet definition:
 * @struts.form name="invoiceEditDisplayForm"
 */
public class InvoiceEditDisplayForm extends ActionForm {

	private static final long serialVersionUID = 2778347832336162474L;

	private int invoiceID;

	private long vendorID;
	
	private String submitButton;

	private String invoiceNumber;

	private String invoiceDate;

	private String invoiceDueDate;

	private boolean invoicePaid;

	private String glCategory;

	private double amountOfInvoice;

	private String description;
	
	private String vendorName;
	
	private String vendorAddress;
	
	private String vendorAddress2;
	
	private String vendorCity;
	
	private String vendorState;
	
	private String vendorZip;
	
	private float discountPercentage;

	private int invoice1099Type;

	private double invoice1099Amount;

	private boolean discountFlag;
	
	private double discountSubjectAmount;
	
	private double discountAmount;

	private double discountPercent;

	private double discountDollars;

	private int discountDue;

	private int discountDueFreq;

	private String discountDueDate;

	private boolean recurringFlag;

	private int recurringCount;

	private int recurringFreq;
	
	private int recurringFreqCode;

	private int checkingAccount;

	private int checkingStatus;
	
	private long locationID;
	
	private String editInvItemID;
	
	private String editGLItemID;
	
	private double itemTotalCost;
	
	private double creditTotal;

	private double debitTotal;
	
	private boolean checkCreated;
	
	private ArrayList <InvoiceInventoryItemLinePO> invoiceInvItems = new ArrayList <InvoiceInventoryItemLinePO>();
	
	private ArrayList <LabelValueBean> glCategories = new ArrayList <LabelValueBean> ();
	
	//private ArrayList <LabelValueBean> checkingStatusList = new ArrayList <LabelValueBean> ();

	private ArrayList <LabelValueBean> type1099Values = new ArrayList <LabelValueBean> ();
	
	private double totalDiscount;
	
	private boolean updateInvoice;
	
	private String invoiceStatus;
	
	private String vendorInfo;
	
	private String discountDueDatePrint;
	
	private String locationVendorMapJavascript;
	
	private String[] vendorIds = null;

	private String[] locationIds;
	
	private String tmpVendorInfo;
	public String getTmpVendorInfo() {
		return tmpVendorInfo;
	}

	public void setTmpVendorInfo(String tmpVendorInfo) {
		this.tmpVendorInfo = tmpVendorInfo;
	}

	/**
	 * @return the discountDueDatePrint
	 */
	public String getDiscountDueDatePrint() {
		return discountDueDatePrint;
	}

	/**
	 * @param discountDueDatePrint the discountDueDatePrint to set
	 */
	public void setDiscountDueDatePrint(String discountDueDatePrint) {
		this.discountDueDatePrint = discountDueDatePrint;
	}

	/**
	 * @return the vendorInfo
	 */
	public String getVendorInfo() {
		return vendorInfo;
	}

	/**
	 * @param vendorInfo the vendorInfo to set
	 */
	public void setVendorInfo(String vendorInfo) {
		this.vendorInfo = vendorInfo;
	}

	/**
	 * @return the invoiceStatus
	 */
	public String getInvoiceStatus() {
	return invoiceStatus;
	}

	/**
	 * @param invoiceStatus the invoiceStatus to set
	 */
	public void setInvoiceStatus(String invoiceStatus) {
	this.invoiceStatus = invoiceStatus;
	}

	/**
	 * @return the updateInvoice
	 */
	public boolean isUpdateInvoice() {
		return updateInvoice;
	}

	/**
	 * @param updateInvoice the updateInvoice to set
	 */
	public void setUpdateInvoice(boolean updateInvoice) {
		this.updateInvoice = updateInvoice;
	}

	/**
	 * @return the totalTaxDiscount
	 */
	public double getTotalDiscount() {
		return totalDiscount;
	}

	/**
	 * @param totalTaxDiscount the totalTaxDiscount to set
	 */
	public void setTotalDiscount(double totalDiscount) {
		this.totalDiscount = totalDiscount;
	}

	/** 
	 * Method validate
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {
		
		ActionErrors errors = new ActionErrors();
		HttpSession session = request.getSession();
		DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);		
		ApVendorLocationDAO apVendorLocationDao = new ApVendorLocationDAO(user);
		ApVendorDAO vendorDao = new ApVendorDAO(user);
		ArrayList<Long> locationIDs = new ArrayList<Long>();
		locationIDs.add( locationID);
		ArrayList <ApVendorLocationDTO> apVendorLocationList = apVendorLocationDao.getApVendorLocationByLocationIDs(locationIDs);
		ArrayList<Long> vendorIDs = new ArrayList<Long>();
		for ( ApVendorLocationDTO apVendorLocation : apVendorLocationList ) {
			vendorIDs.add(apVendorLocation.getVendorID());
		}
		ArrayList <ApVendorDTO> vendorList = new ArrayList  <ApVendorDTO> ();
		vendorList = vendorDao.getApVendorByVendorIDs(true,vendorIDs);		
		session.setAttribute("vendorListAll", vendorList);
		
		if ( submitButton.equalsIgnoreCase("Add Vendor") ) {
			return errors;
		}
		if ( submitButton.equalsIgnoreCase("Cancel") ) {
			return errors;
		}

		if ( locationID == 0 ) {
			errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.int", "Location ID") );
		}

		if ( vendorID == 0 ) {
			errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.int", "Vendor ID") );
		}
		
		if ( invoiceNumber == null || invoiceNumber.trim().equals("") ){
			errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Invoice Number") );
		}
		if ( submitButton.equalsIgnoreCase("CheckInvoice") ) {
			
			Boolean dulicateInvoiceNumber = false;
			InvoiceDAO invoiceDAO = new InvoiceDAO(user);
				ArrayList<InvoiceDTO>  invoices = invoiceDAO.getInvoicesByInvoiceNumber(invoiceNumber.trim(), true);
				if ( !invoices.isEmpty()){			
					for (InvoiceDTO invoice: invoices ){
						if (invoice.getVendorID() == vendorID){
							dulicateInvoiceNumber = true;
							break;
						}
					}
				}
				
				if (dulicateInvoiceNumber) {
					errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.acct.invoice.dulicate", invoiceNumber) );

				} 
		}
		if ( submitButton != null ) {
			if ( submitButton.equals("Add Item") ) {
				return errors;
			} else if ( submitButton.equals("Edit Item") ) {
				return errors;
			} else if ( submitButton.equals("Add Entry") ) {
				return errors;
			} else if ( submitButton.equals("Edit Entry") ) {
				return errors;
			} 
		}
		
//		if ( glCategory == null || glCategory=="") {
//			errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "GL Category") );
//		}
		
		if ( invoiceDate == null ) {
			errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Invoice Date") );
		} else {
			try {
				FormatDate.convertToSQLDate(invoiceDate);
			} catch ( Exception e ) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.dateMMDDYYYY", "Invoice Date") );	
			}
		}
		
		if ( invoiceDueDate == null ) {
			errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Invoice Due Date") );
		} else {
			try {
				FormatDate.convertToSQLDate(invoiceDueDate);
			} catch ( Exception e ) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.dateMMDDYYYY", "Invoice Due Date") );	
			}
		}
		
		if ( discountFlag ) {
			
			if ( discountAmount <= 0.0 ) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Discount amount") );
			}
			
			if ( discountDue == 0 ) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Discount available if paid within") );
			}
			
			// if ( discountSubjectAmount == 0 ) {
			//	errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Amount subject to discount") );
			//}
			
			if ( discountDue > 0 && discountDueFreq <= 0 ) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Discount due frequency") );
			}
			
			if ( discountDueDate == null ) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Discount due date") );
			} else {
				try {
					FormatDate.convertToSQLDate(discountDueDate);
				} catch ( Exception e ) {
					errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.dateMMDDYYYY", "Discount due date") );	
				}
			}
			
			if ( discountPercent == 0.0 && discountDollars == 0.0) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Either discount percentage or dollars") );
			}
			
		} 
		
		if ( amountOfInvoice == 0.0 ) {
			errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.double", "Total amount of invoice") );
		}
		
		if ( recurringFlag ) {

			if ( recurringCount == 0 ) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Recurring count") );
			}

			if ( recurringFreq == 0 ) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Recurring frequency") );
			}
			
			if ( recurringFreq > 0 && recurringFreqCode <= 0 ) {
				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.required", "Recurring frequency code") );
			}
			
		}
		

		
//		if ( checkingStatus == InvoiceDTO.CHECK_STATUS_CHECK_GEN_MANUAL || checkingStatus == InvoiceDTO.CHECK_STATUS_PRINT_CHECK_NOW  ) {
//			if ( checkNumber <= 0 ) {
//				errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.int", "Check Number") );
//			}
//			
//			if ( checkCreated == false ) {
//				if ( checkingStatus == InvoiceDTO.CHECK_STATUS_PRINT_CHECK_NOW ) {
//					InvoiceManager imvMgr = new InvoiceManager();
//					boolean checkExists = imvMgr.checkNumberAlreadyExists(user, (int) checkNumber );
//					
//					if ( checkExists ) {
//						errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.acct.checknumber.exist", checkNumber) );						
//					}
//					
//				}
//			}
//		}
		
		return errors;
	}

	/** 
	 * Method reset
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
		
	}

	/**
	 * @return the amountOfInvoice
	 */
	public double getAmountOfInvoice() {
		return amountOfInvoice;
	}

	/**
	 * @param amountOfInvoice the amountOfInvoice to set
	 */
	public void setAmountOfInvoice(double amountOfInvoice) {
		this.amountOfInvoice = amountOfInvoice;
	}

	/**
	 * @return the checkingAccount
	 */
	public int getCheckingAccount() {
		return checkingAccount;
	}

	/**
	 * @param checkingAccount the checkingAccount to set
	 */
	public void setCheckingAccount(int checkingAccount) {
		this.checkingAccount = checkingAccount;
	}

	/**
	 * @return the checkingStatus
	 */
	public int getCheckingStatus() {
		return checkingStatus;
	}

	/**
	 * @param checkingStatus the checkingStatus to set
	 */
	public void setCheckingStatus(int checkingStatus) {
		this.checkingStatus = checkingStatus;
	}

	/**
	 * @return the description
	 */
	public String getDescription() {
		return description;
	}

	/**
	 * @param description the description to set
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * @return the discountAmount
	 */
	public double getDiscountAmount() {
		return discountAmount;
	}

	/**
	 * @param discountAmount the discountAmount to set
	 */
	public void setDiscountAmount(double discountAmount) {
		this.discountAmount = discountAmount;
	}

	/**
	 * @return the discountDollars
	 */
	public double getDiscountDollars() {
		return discountDollars;
	}

	/**
	 * @param discountDollars the discountDollars to set
	 */
	public void setDiscountDollars(double discountDollars) {
		this.discountDollars = discountDollars;
	}

	/**
	 * @return the discountDue
	 */
	public int getDiscountDue() {
		return discountDue;
	}

	/**
	 * @param discountDue the discountDue to set
	 */
	public void setDiscountDue(int discountDue) {
		this.discountDue = discountDue;
	}

	/**
	 * @return the discountDueDate
	 */
	public String getDiscountDueDate() {
		return discountDueDate;
	}

	/**
	 * @param discountDueDate the discountDueDate to set
	 */
	public void setDiscountDueDate(String discountDueDate) {
		this.discountDueDate = discountDueDate;
	}

	/**
	 * @return the discountDueFreqCode
	 */
	public int getDiscountDueFreq() {
		return discountDueFreq;
	}

	/**
	 * @param discountDueFreqCode the discountDueFreqCode to set
	 */
	public void setDiscountDueFreq(int discountDueFreq) {
		this.discountDueFreq = discountDueFreq;
	}

	/**
	 * @return the discountPercent
	 */
	public double getDiscountPercent() {
		return discountPercent;
	}

	/**
	 * @param discountPercent the discountPercent to set
	 */
	public void setDiscountPercent(double discountPercent) {
		this.discountPercent = discountPercent;
	}

	/**
	 * @return the invoice1099Amount
	 */
	public double getInvoice1099Amount() {
		return invoice1099Amount;
	}

	/**
	 * @param invoice1099Amount the invoice1099Amount to set
	 */
	public void setInvoice1099Amount(double invoice1099Amount) {
		this.invoice1099Amount = invoice1099Amount;
	}

	/**
	 * @return the invoice1099Type
	 */
	public int getInvoice1099Type() {
		return invoice1099Type;
	}

	/**
	 * @param invoice1099Type the invoice1099Type to set
	 */
	public void setInvoice1099Type(int invoice1099Type) {
		this.invoice1099Type = invoice1099Type;
	}

	/**
	 * @return the invoiceDate
	 */
	public String getInvoiceDate() {
		return invoiceDate;
	}

	/**
	 * @param invoiceDate the invoiceDate to set
	 */
	public void setInvoiceDate(String invoiceDate) {
		this.invoiceDate = invoiceDate;
	}

	/**
	 * @return the invoiceDueDate
	 */
	public String getInvoiceDueDate() {
		return invoiceDueDate;
	}

	/**
	 * @param invoiceDueDate the invoiceDueDate to set
	 */
	public void setInvoiceDueDate(String invoiceDueDate) {
		this.invoiceDueDate = invoiceDueDate;
	}

	/**
	 * @return the invoiceID
	 */
	public int getInvoiceID() {
		return invoiceID;
	}

	/**
	 * @param invoiceID the invoiceID to set
	 */
	public void setInvoiceID(int invoiceID) {
		this.invoiceID = invoiceID;
	}

	/**
	 * @return the invoiceNumber
	 */
	public String getInvoiceNumber() {
		return invoiceNumber;
	}

	/**
	 * @param invoiceNumber the invoiceNumber to set
	 */
	public void setInvoiceNumber(String invoiceNumber) {
		this.invoiceNumber = invoiceNumber;
	}

	/**
	 * @return the invoicePaid
	 */
	public boolean isInvoicePaid() {
		return invoicePaid;
	}

	/**
	 * @param invoicePaid the invoicePaid to set
	 */
	public void setInvoicePaid(boolean invoicePaid) {
		this.invoicePaid = invoicePaid;
	}

	/**
	 * @return the recurringCount
	 */
	public int getRecurringCount() {
		return recurringCount;
	}

	/**
	 * @param recurringCount the recurringCount to set
	 */
	public void setRecurringCount(int recurringCount) {
		this.recurringCount = recurringCount;
	}

	/**
	 * @return the recurringFlag
	 */
	public boolean isRecurringFlag() {
		return recurringFlag;
	}

	/**
	 * @param recurringFlag the recurringFlag to set
	 */
	public void setRecurringFlag(boolean recurringFlag) {
		this.recurringFlag = recurringFlag;
	}

	/**
	 * @return the recurringFreqCode
	 */
	public int getRecurringFreqCode() {
		return recurringFreqCode;
	}

	/**
	 * @param recurringFreqCode the recurringFreqCode to set
	 */
	public void setRecurringFreqCode(int recurringFreqCode) {
		this.recurringFreqCode = recurringFreqCode;
	}

	/**
	 * @return the vendorID
	 */
	public long getVendorID() {
		return vendorID;
	}

	/**
	 * @param vendorID the vendorID to set
	 */
	public void setVendorID(long vendorID) {
		this.vendorID = vendorID;
	}

	/**
	 * @return the vendorName
	 */
	public String getVendorName() {
		return vendorName;
	}

	/**
	 * @param vendorName the vendorName to set
	 */
	public void setVendorName(String vendorName) {
		this.vendorName = vendorName;
	}

	/**
	 * @return the vendorAddress
	 */
	public String getVendorAddress() {
		return vendorAddress;
	}

	/**
	 * @param vendorAddress the vendorAddress to set
	 */
	public void setVendorAddress(String vendorAddress) {
		this.vendorAddress = vendorAddress;
	}

	/**
	 * @return the vendorAddress2
	 */
	public String getVendorAddress2() {
		return vendorAddress2;
	}

	/**
	 * @param vendorAddress2 the vendorAddress2 to set
	 */
	public void setVendorAddress2(String vendorAddress2) {
		this.vendorAddress2 = vendorAddress2;
	}

	/**
	 * @return the vendorCity
	 */
	public String getVendorCity() {
		return vendorCity;
	}

	/**
	 * @param vendorCity the vendorCity to set
	 */
	public void setVendorCity(String vendorCity) {
		this.vendorCity = vendorCity;
	}

	/**
	 * @return the vendorState
	 */
	public String getVendorState() {
		return vendorState;
	}

	/**
	 * @param vendorState the vendorState to set
	 */
	public void setVendorState(String vendorState) {
		this.vendorState = vendorState;
	}

	/**
	 * @return the vendorZip
	 */
	public String getVendorZip() {
		return vendorZip;
	}

	/**
	 * @param vendorZip the vendorZip to set
	 */
	public void setVendorZip(String vendorZip) {
		this.vendorZip = vendorZip;
	}

	/**
	 * @return the discountSubjectAmount
	 */
	public double getDiscountSubjectAmount() {
		return discountSubjectAmount;
	}

	/**
	 * @param discountSubjectAmount the discountSubjectAmount to set
	 */
	public void setDiscountSubjectAmount(double discountSubjectAmount) {
		this.discountSubjectAmount = discountSubjectAmount;
	}

	/**
	 * @return the recurringFreq
	 */
	public int getRecurringFreq() {
		return recurringFreq;
	}

	/**
	 * @param recurringFreq the recurringFreq to set
	 */
	public void setRecurringFreq(int recurringFreq) {
		this.recurringFreq = recurringFreq;
	}

	/**
	 * @return the locationID
	 */
	public long getLocationID() {
		return locationID;
	}

	/**
	 * @param locationID the locationID to set
	 */
	public void setLocationID(long locationID) {
		this.locationID = locationID;
	}

	public boolean isDiscountFlag() {
		return discountFlag;
	}

	public void setDiscountFlag(boolean discountFlag) {
		this.discountFlag = discountFlag;
	}

	/**
	 * @return the submitButton
	 */
	public String getSubmitButton() {
		return submitButton;
	}

	/**
	 * @param submitButton the submitButton to set
	 */
	public void setSubmitButton(String submitButton) {
		this.submitButton = submitButton;
	}

	/**
	 * @return the invoiceInvItems
	 */
	public ArrayList<InvoiceInventoryItemLinePO> getInvoiceInvItems() {
		return invoiceInvItems;
	}

	/**
	 * @param invoiceInvItems the invoiceInvItems to set
	 */
	public void setInvoiceInvItems(
			ArrayList<InvoiceInventoryItemLinePO> invoiceInvItems) {
		this.invoiceInvItems = invoiceInvItems;
	}

	/**
	 * @return the itemTotalCost
	 */
	public double getItemTotalCost() {
		return itemTotalCost;
	}

	/**
	 * @param itemTotalCost the itemTotalCost to set
	 */
	public void setItemTotalCost(double itemTotalCost) {
		this.itemTotalCost = itemTotalCost;
	}

	/**
	 * @return the editInvItemID
	 */
	public String getEditInvItemID() {
		return editInvItemID;
	}

	/**
	 * @param editInvItemID the editInvItemID to set
	 */
	public void setEditInvItemID(String editInvItemID) {
		this.editInvItemID = editInvItemID;
	}

	/**
	 * @return the editGLItemID
	 */
	public String getEditGLItemID() {
		return editGLItemID;
	}

	/**
	 * @param editGLItemID the editGLItemID to set
	 */
	public void setEditGLItemID(String editGLItemID) {
		this.editGLItemID = editGLItemID;
	}

	/**
	 * @return the creditTotal
	 */
	public double getCreditTotal() {
		return creditTotal;
	}

	/**
	 * @param creditTotal the creditTotal to set
	 */
	public void setCreditTotal(double creditTotal) {
		this.creditTotal = creditTotal;
	}

	/**
	 * @return the debitTotal
	 */
	public double getDebitTotal() {
		return debitTotal;
	}

	/**
	 * @param debitTotal the debitTotal to set
	 */
	public void setDebitTotal(double debitTotal) {
		this.debitTotal = debitTotal;
	}

	/**
	 * @return the glCategory
	 */
	public String getGlCategory() {
		return glCategory;
	}

	/**
	 * @param glCategory the glCategory to set
	 */
	public void setGlCategory(String glCategory) {
		this.glCategory = glCategory;
	}

	/**
	 * @return the glCategories
	 */
	public ArrayList<LabelValueBean> getGlCategories() {
		return glCategories;
	}

	/**
	 * @param glCategories the glCategories to set
	 */
	public void setGlCategories(ArrayList<LabelValueBean> glCategories) {
		this.glCategories = glCategories;
	}

	/**
	 * @return the checkCreated
	 */
	public boolean isCheckCreated() {
		return checkCreated;
	}

	/**
	 * @param checkCreated the checkCreated to set
	 */
	public void setCheckCreated(boolean checkCreated) {
		this.checkCreated = checkCreated;
	}

//	/**
//	 * @return the checkingStatusList
//	 */
//	public ArrayList<LabelValueBean> getCheckingStatusList() {
//		return checkingStatusList;
//	}
//
//	/**
//	 * @param checkingStatusList the checkingStatusList to set
//	 */
//	public void setCheckingStatusList(ArrayList<LabelValueBean> checkingStatusList) {
//		this.checkingStatusList = checkingStatusList;
//	}

	/**
	 * @return the type1099Values
	 */
	public ArrayList<LabelValueBean> getType1099Values() {
		return type1099Values;
	}

	/**
	 * @param type1099Values the type1099Values to set
	 */
	public void setType1099Values(ArrayList<LabelValueBean> type1099Values) {
		this.type1099Values = type1099Values;
	}

	/**
	 * @return the discountPercentage
	 */
	public float getDiscountPercentage() {
		return discountPercentage;
	}

	/**
	 * @param discountPercentage the discountPercentage to set
	 */
	public void setDiscountPercentage(float discountPercentage) {
		this.discountPercentage = discountPercentage;
	}

	/**
	 * @return the locationVendorMapJavascript
	 */
	public String getLocationVendorMapJavascript() {
		return locationVendorMapJavascript;
	}

	/**
	 * @param locationVendorMapJavascript the locationVendorMapJavascript to set
	 */
	public void setLocationVendorMapJavascript(String locationVendorMapJavascript) {
		this.locationVendorMapJavascript = locationVendorMapJavascript;
	}

	/**
	 * @return the vendorIds
	 */
	public String[] getVendorIds() {
		return vendorIds;
	}

	/**
	 * @param vendorIds the vendorIds to set
	 */
	public void setVendorIds(String[] vendorIds) {
		this.vendorIds = vendorIds;
	}

	/**
	 * @return the locationIds
	 */
	public String[] getLocationIds() {
		return locationIds;
	}

	/**
	 * @param locationIds the locationIds to set
	 */
	public void setLocationIds(String[] locationIds) {
		this.locationIds = locationIds;
	}
	
}