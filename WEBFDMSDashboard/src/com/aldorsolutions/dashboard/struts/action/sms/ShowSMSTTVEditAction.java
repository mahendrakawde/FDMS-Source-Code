/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 * CJongs
 */
package com.aldorsolutions.dashboard.struts.action.sms;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.util.LabelValueBean;

import com.aldorassist.webfdms.model.SMSSchedulingDTO;
import com.aldorassist.webfdms.model.SMSStoreProcDTO;
import com.aldorsolutions.dashboard.struts.form.sms.SMSTTVEditForm;
import com.aldorsolutions.webfdms.admin.user.bean.UserManagerBean;
import com.aldorsolutions.webfdms.admin.user.model.UserLocationDTO;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.reporting.dao.SMSSchedulingDAO;
import com.aldorsolutions.webfdms.reporting.dao.SMSStoreProcDAO;
import com.aldorsolutions.webfdms.security.bean.SecurityManagerBean;
import com.aldorsolutions.webfdms.security.model.SecurityConfigDTO;
import com.aldorsolutions.webfdms.sms.SMSTTVRecipientDTO;
import com.aldorsolutions.webfdms.sms.dao.SMSTTVRecipientDAO;
import com.aldorsolutions.webfdms.util.DAO;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 06-25-2007
 * 
 * XDoclet definition:
 * @struts.action path="/acctEditVendors" name="acctEditVendorsForm" input="/acct/acctEditVendors.jsp" scope="request" validate="true"
 * @struts.action-forward name="listVendors" path="/acct/acctListVendors.jsp" redirect="true"
 */
public class ShowSMSTTVEditAction extends Action {
	
	private Logger logger = Logger.getLogger(ShowSMSTTVEditAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm actionForm, HttpServletRequest request,
			HttpServletResponse response) {
		
		
		SMSTTVEditForm form = (SMSTTVEditForm) actionForm;
		HttpSession session = request.getSession();
		DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);
		String type = "";
        if (request.getParameter("type") != null) {
        	type = request.getParameter("type");
        }
        String schedulingId = "";
        if (request.getParameter("schedulingID") != null) {
        	schedulingId = request.getParameter("schedulingID");
        }
		form.setSendType(type);
        setForm(form,schedulingId,user,type);
		form.setSqls(getSqls(form, session));
		form.setRecipients(getRecipients(form, session, user, type));
		
		ArrayList <UserLocationDTO> userLocations = new ArrayList <UserLocationDTO>();
		UserManagerBean uMgr = new UserManagerBean();
		userLocations = uMgr.getLocationOfUser( user.getDbLookup(), (int) user.getId(), 
				user.getCompanyID(), user.getRegion(), (long)user.getLocationId()); 
    	session.setAttribute("ADMIN_LOCATIONS", userLocations);
		
		return mapping.findForward("smsTTVEditJsp");
	}	
    private void setForm(SMSTTVEditForm form, String schedulingId, DbUserSession user, String type) {
    	
    	SecurityManagerBean smBean = new SecurityManagerBean();
	    SecurityConfigDTO security = smBean.getSecurityConfig(user.getCompanyID());
	        if (type.compareToIgnoreCase("sms")==0) {
	        	form.setGreeting(security.getSmsGreeting());
	        }else {
	        	form.setGreeting(security.getTtvGreeting());
	        }
    	
    	if (Integer.valueOf(schedulingId) > 0){
    		SMSSchedulingDAO smsScheDAo = new SMSSchedulingDAO(DAO.DB_FDMSCOMMON);
    		SMSSchedulingDTO data = new SMSSchedulingDTO();
    		data = smsScheDAo.getSMSCommonScheduling(Integer.valueOf(schedulingId));
    	}else {
			form.setLocaleID(0);
			form.setLocationID(0);
			form.setSmsID(1);
			form.setRequestType("N");
			form.setToDate("");  
			form.setFromDate("") ;  
			form.setRunDate("");
			form.setRepeatType("D");
			form.setRepeatNumber(0);
			form.setHH(0);
			form.setMM(0);
			form.setCompanyID(0);
			form.setFirstname("");
			form.setLastname("");
			form.setAreaCode("");
			form.setPhonenumber("");
			form.setCountryCode("1");
    	}
	}

	private ArrayList <LabelValueBean> getSqls(SMSTTVEditForm form, HttpSession session) {
		
		ArrayList <LabelValueBean> array = new ArrayList <LabelValueBean> ();
		
		SMSStoreProcDAO smsStoreProcDao = new SMSStoreProcDAO(DAO.DB_FDMSCOMMON);
	    ArrayList <SMSStoreProcDTO> sqlStrings = new ArrayList <SMSStoreProcDTO> ();
	    
	    sqlStrings = smsStoreProcDao.getSMSStroreProc();
	    form.setSqlStrings(sqlStrings);
//	    session.setAttribute("sqlStrings", sqlStrings);
	        
	        for (SMSStoreProcDTO sqlDto : sqlStrings) {

	        	array.add(new LabelValueBean(sqlDto.getName(),Integer.toString(sqlDto.getId())));
	        }
		
		return ( array );		
	}   
	private ArrayList <LabelValueBean> getRecipients(SMSTTVEditForm form, HttpSession session,DbUserSession user,String type) {
		
		ArrayList <LabelValueBean> array = new ArrayList <LabelValueBean> ();
		
		ArrayList <SMSTTVRecipientDTO> recipientDisplays = new ArrayList <SMSTTVRecipientDTO> ();
        SMSTTVRecipientDAO recipientDao = new SMSTTVRecipientDAO(user);
        recipientDisplays = recipientDao.getSMSTTYRecipientByType(type);
        for (SMSTTVRecipientDTO sqlDto : recipientDisplays) {
        	        	array.add(new LabelValueBean( sqlDto.getFirstname()+" "+sqlDto.getLastname(),Integer.toString(sqlDto.getId())));
        }
		return ( array );		
	}   
	
}