/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 * CJongs
 */
package com.aldorsolutions.dashboard.struts.action.sms;

import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.aldorassist.webfdms.model.SMSSchedulingDTO;
import com.aldorsolutions.dashboard.struts.form.sms.SMSTTVListForm;
import com.aldorsolutions.dashboard.struts.form.sms.SMSTTVRecipientForm;
import com.aldorsolutions.webfdms.admin.user.model.UserLocaleDTO;
import com.aldorsolutions.webfdms.admin.user.model.UserLocationDTO;
import com.aldorsolutions.webfdms.beans.DbApAccount;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.checkwriter.dao.ApVendorLocationDAO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorLocationDTO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorLocationDisplayDTO;
import com.aldorsolutions.webfdms.company.bean.CompanyManagerBean;
import com.aldorsolutions.webfdms.company.model.CompanyDTO;
import com.aldorsolutions.webfdms.reporting.dao.SMSSchedulingDAO;
import com.aldorsolutions.webfdms.security.bean.SecurityManagerBean;
import com.aldorsolutions.webfdms.security.model.SecurityConfigDTO;
import com.aldorsolutions.webfdms.sms.SMSTTVRecipientDTO;
import com.aldorsolutions.webfdms.sms.dao.SMSTTVRecipientDAO;
import com.aldorsolutions.webfdms.util.DAO;
import com.aldorsolutions.webfdms.util.FormatNumber;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 06-25-2007
 * 
 * XDoclet definition:
 * @struts.action path="/acctEditVendors" name="acctEditVendorsForm" input="/acct/acctEditVendors.jsp" scope="request" validate="true"
 * @struts.action-forward name="listVendors" path="/acct/acctListVendors.jsp" redirect="true"
 */
public class ShowSMSTTVListAction extends Action {
	
	private Logger logger = Logger.getLogger(ShowSMSTTVListAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {

	      HttpSession session = request.getSession();  
	      DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);
	      SMSTTVListForm listForm = (SMSTTVListForm) form;
	        
	      String sendType = "";
	      if (request.getParameter("Type") != null) {
	        	sendType = request.getParameter("Type");
	      }
	      
	       SecurityManagerBean smBean = new SecurityManagerBean();
	        SecurityConfigDTO security = smBean.getSecurityConfig(user.getCompanyID());
	        if (sendType.compareToIgnoreCase("sms")==0) {
	        	listForm.setMsgAvailable(String.valueOf(security.getSmsNumberOfTime()));
	        }else {
	        	listForm.setMsgAvailable(String.valueOf(security.getTtvNumberOfTime()));
	        }
	      
	      
	        int totalSMSs = 0;
	        ArrayList <SMSSchedulingDTO>smsList = new ArrayList <SMSSchedulingDTO>();
	        SMSSchedulingDAO smsScheDAo = new SMSSchedulingDAO(DAO.DB_FDMSCOMMON);
	        try {                  
	        	
	        	ArrayList <SMSSchedulingDTO> smsScheList = null;
				//if(intial){
					GregorianCalendar cal = new GregorianCalendar();
					smsScheList = smsScheDAo.getReportSchedulingQByCompanyId(user.getCompanyID(),sendType);

				
				if (smsScheList.size() > 0) {
					for (SMSSchedulingDTO smsScheduling: smsScheList) {
						
						if (smsScheduling.getStatus().compareToIgnoreCase("Q") == 0 || smsScheduling.getStatus().compareToIgnoreCase("R") == 0) {
							smsList.add(smsScheduling);
						}
					}
				}
	            
	            
	        } catch (Exception e) {
	            logger.error("Exception in perform() : ", e);
	        }
	        listForm.setSmss(smsList);
	        listForm.setSendType(sendType);
//	        request.setAttribute("smss", smsList);
	        session.setAttribute("smss", smsList);
	        session.setAttribute("totalSMSs", Integer.toString(totalSMSs) );
	        
	        return mapping.findForward("smsTTVList");
	}	
	
	
	
}