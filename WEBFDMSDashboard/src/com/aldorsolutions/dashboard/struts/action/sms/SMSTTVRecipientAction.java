/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 * CJongs
 */
package com.aldorsolutions.dashboard.struts.action.sms;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.aldorsolutions.dashboard.struts.form.sms.SMSTTVRecipientForm;
import com.aldorsolutions.webfdms.admin.user.model.UserLocaleDTO;
import com.aldorsolutions.webfdms.admin.user.model.UserLocationDTO;
import com.aldorsolutions.webfdms.beans.DbApAccount;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.checkwriter.dao.ApVendorLocationDAO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorLocationDTO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorLocationDisplayDTO;
import com.aldorsolutions.webfdms.security.bean.SecurityManagerBean;
import com.aldorsolutions.webfdms.security.model.SecurityConfigDTO;
import com.aldorsolutions.webfdms.sms.SMSTTVRecipientDTO;
import com.aldorsolutions.webfdms.sms.dao.SMSTTVRecipientDAO;
import com.aldorsolutions.webfdms.util.FormatNumber;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 06-25-2007
 * 
 * XDoclet definition:
 * @struts.action path="/acctEditVendors" name="acctEditVendorsForm" input="/acct/acctEditVendors.jsp" scope="request" validate="true"
 * @struts.action-forward name="listVendors" path="/acct/acctListVendors.jsp" redirect="true"
 */
public class SMSTTVRecipientAction extends Action {
	
	private Logger logger = Logger.getLogger(SMSTTVRecipientAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {

		SMSTTVRecipientForm smsTTVRecipientForm = (SMSTTVRecipientForm) form;
		
//		SMSTTVRecipientForm smsTTVRecipientForm = new SMSTTVRecipientForm();

		HttpSession session =  request.getSession();
        DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);
        
        String type = "";
        if (request.getParameter("Type") != null) {
        	type = request.getParameter("Type");
        }
        
        smsTTVRecipientForm.setType(type);
        int a = 1;
        
        ArrayList <SMSTTVRecipientDTO> recipientDisplays = new ArrayList <SMSTTVRecipientDTO> ();
        SMSTTVRecipientDAO recipientDao = new SMSTTVRecipientDAO(user);
        recipientDisplays = recipientDao.getSMSTTYRecipientByType(type);
        
        session.setAttribute("Recipient_List", recipientDisplays);
        
        SMSTTVRecipientDTO defaultRecipient = new SMSTTVRecipientDTO();
        
        SecurityManagerBean smBean = new SecurityManagerBean();
        SecurityConfigDTO security = smBean.getSecurityConfig(user.getCompanyID());
        if (type.compareToIgnoreCase("sms")==0) {
        	defaultRecipient.setId(0);
        	defaultRecipient.setFirstname(security.getSmsFirstname());
        	defaultRecipient.setLastname(security.getSmsLastname());
        	defaultRecipient.setAreacode(security.getSmsAreaCode());
        	defaultRecipient.setPhone(security.getSmsPhone());
        	defaultRecipient.setGreeting(security.getSmsGreeting());
        	defaultRecipient.setType("sms");
        	
        }else {
        	defaultRecipient.setId(0);
        	defaultRecipient.setFirstname(security.getTtvFirstname());
        	defaultRecipient.setLastname(security.getTtvLastname());
        	defaultRecipient.setAreacode(security.getTtvAreaCode());
        	defaultRecipient.setPhone(security.getTtvPhone());
        	defaultRecipient.setGreeting(security.getTtvGreeting());
        	defaultRecipient.setType("ttv");
        }
        
        session.setAttribute("Default_Recipient", defaultRecipient);
       // session.setAttribute("smsTTVRecipientForm", smsTTVRecipientForm);
		return mapping.findForward("smsTTVRecipientEdit");
	}	
	
	
	
}