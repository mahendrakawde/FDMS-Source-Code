/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.aldorsolutions.dashboard.struts.action.sms;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.aldorassist.webfdms.delegate.InvoiceManager;
import com.aldorsolutions.dashboard.struts.form.acct.VendorLocEditForm;
import com.aldorsolutions.dashboard.struts.form.sms.RecipientForm;
import com.aldorsolutions.dashboard.struts.form.sms.SMSTTVRecipientForm;
import com.aldorsolutions.webfdms.admin.user.bean.UserManagerBean;
import com.aldorsolutions.webfdms.admin.user.model.UserLocationDTO;
import com.aldorsolutions.webfdms.beans.DbApAccount;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.checkwriter.dao.ApVendorLocationDAO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorLocationDTO;
import com.aldorsolutions.webfdms.security.bean.SecurityManagerBean;
import com.aldorsolutions.webfdms.security.model.SecurityConfigDTO;
import com.aldorsolutions.webfdms.sms.SMSTTVRecipientDTO;
import com.aldorsolutions.webfdms.sms.dao.SMSTTVRecipientDAO;
import com.aldorsolutions.webfdms.util.FormatNumber;
import com.aldorsolutions.webfdms.util.SessionValueKeys;


/** 
 * MyEclipse Struts
 * Creation date: 06-28-2007
 * 
 * XDoclet definition:
 * @struts.action path="/vendorLocEdit" name="vendorLocEditForm" input="/acct/vendorLocEdit.jsp" scope="request" validate="true"
 */
public class RecipientEditAction extends Action {
	/*
	 * Generated Methods
	 */

	private Logger logger = Logger.getLogger(RecipientEditAction.class.getName());	
	
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		RecipientForm recipientForm = (RecipientForm) form;
		
		HttpSession session = request.getSession();
		DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);
		int id = 0;
        if (request.getParameter("id") != null) {
        	id = Integer.valueOf(request.getParameter("id"));
        }
        String type = "";
        if (request.getParameter("type") != null) {
        	type = request.getParameter("type");
        }
        int a = 1;
        if (id>0){
        	
        	SMSTTVRecipientDTO recipient = new SMSTTVRecipientDTO();
        	SMSTTVRecipientDAO recipientDao = new SMSTTVRecipientDAO(user);
			recipient = recipientDao.getSMSTTVRecipient(id);
        	
        	recipientForm.setId(String.valueOf(id));
        	recipientForm.setFirstname(recipient.getFirstname());
        	recipientForm.setLastname(recipient.getLastname());
        	recipientForm.setAreacode(recipient.getAreacode());
        	recipientForm.setPhone(recipient.getPhone());
        	recipientForm.setGreeting(recipient.getGreeting());
        	recipientForm.setType("sms");
        }else {
        	SMSTTVRecipientDTO defaultRecipient = new SMSTTVRecipientDTO();
            SecurityManagerBean smBean = new SecurityManagerBean();
            SecurityConfigDTO security = smBean.getSecurityConfig(user.getCompanyID());
        	if ("sms".compareToIgnoreCase(type)==0){
        		recipientForm.setId("0");
        		recipientForm.setFirstname(security.getSmsFirstname());
        		recipientForm.setLastname(security.getSmsLastname());
        		recipientForm.setAreacode(security.getSmsAreaCode());
        		recipientForm.setPhone(security.getSmsPhone());
        		recipientForm.setGreeting(security.getSmsGreeting());
        		recipientForm.setType("sms");
        	}else {
        		recipientForm.setId("0");
        		recipientForm.setFirstname(security.getTtvFirstname());
        		recipientForm.setLastname(security.getTtvLastname());
        		recipientForm.setAreacode(security.getTtvAreaCode());
        		recipientForm.setPhone(security.getTtvPhone());
        		recipientForm.setGreeting(security.getTtvGreeting());
        		recipientForm.setType("ttv");
        	}
        }

		return ( mapping.findForward("showEdit") );
	}
}