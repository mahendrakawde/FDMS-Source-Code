/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 * CJongs
 */
package com.aldorsolutions.dashboard.struts.action.report;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import com.aldorassist.webfdms.model.LocaleDTO;
import com.aldorassist.webfdms.model.ReportSchedulingDTO;
import com.aldorassist.webfdms.model.ShowReportSchedulingDTO;
import com.aldorsolutions.dashboard.struts.form.report.ReportForm;
import com.aldorsolutions.dashboard.struts.form.report.ReportSchedulingForm;
import com.aldorsolutions.dashboard.struts.form.report.ReportSchedulingListForm;
import com.aldorsolutions.dashboard.struts.form.report.UpdateRptScheForm;
import com.aldorsolutions.webfdms.beans.DbFormsAvailable;
import com.aldorsolutions.webfdms.beans.DbLocation;
import com.aldorsolutions.webfdms.beans.DbUser;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.beans.FdmsDb;
import com.aldorsolutions.webfdms.beans.display.CheckListBean;
import com.aldorsolutions.webfdms.common.Constants;
import com.aldorsolutions.webfdms.database.DatabaseTransaction;
import com.aldorsolutions.webfdms.database.PersistenceException;
import com.aldorsolutions.webfdms.forms.dao.FormsAvailableDAO;
import com.aldorsolutions.webfdms.locale.bean.LocaleManagerBean;
import com.aldorsolutions.webfdms.reporting.dao.ReportSchedulingDAO;
import com.aldorsolutions.webfdms.util.FormatDate;
import com.aldorsolutions.webfdms.util.FormatNumber;
import com.aldorsolutions.webfdms.util.OptionsList;
import com.aldorsolutions.webfdms.util.SessionValueKeys;
import com.aldorsolutions.webfdms.util.UtilSingleton;
import java.util.Timer;
import java.util.TimerTask;

/** 
 * MyEclipse Struts
 * Creation date: 04-17-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="failed" path="/login.jsp"
 * @struts.action-forward name="success" path="/main.jsp"
 */
public class UpdateRptScheAction extends Action {
	/*
	 * Generated Methods
	 */
	
	private Logger logger = Logger.getLogger(UpdateRptScheAction.class.getName());

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		
 		HttpSession session =  request.getSession();
        DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);
		UpdateRptScheForm reportForm = (UpdateRptScheForm)form;
		ActionMessages errors = new ActionMessages();
		String scheID = request.getParameter("schedulingID");
		
		ReportSchedulingDTO rptScheList = new ReportSchedulingDTO();
		ReportSchedulingDAO reportScheDAo = new ReportSchedulingDAO(user);
		rptScheList = reportScheDAo.getReportScheduling(Integer.valueOf(scheID));
		
		reportForm.setFromDate(FormatDate.convertDateToMM_DD_YYYY((java.util.Date) rptScheList.getFromDate()));
        reportForm.setToDate(FormatDate.convertDateToMM_DD_YYYY((java.util.Date) rptScheList.getToDate()));
        reportForm.setRunDate(FormatDate.convertDateToMM_DD_YYYY((java.util.Date) rptScheList.getRunDate()));
        reportForm.setRecipientsTo(rptScheList.getEmailTo());
        reportForm.setRecipientsCC(rptScheList.getEmailCC());
        reportForm.setScheID(scheID);
        
        FormsAvailableDAO formsAvailableDAo = new FormsAvailableDAO(user);
        DbFormsAvailable formsAvailable = formsAvailableDAo.getFormsAvailable(rptScheList.getFormID());
        reportForm.setSelectReport(formsAvailable.getDescription());
        

		return ( mapping.findForward("success") );
	}
	
	
}