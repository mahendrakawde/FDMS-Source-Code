/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.aldorsolutions.dashboard.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.aldorsolutions.webfdms.beans.DbFormsAvailable;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.forms.dao.FormsAvailableDAO;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 04-26-2007
 * 
 * XDoclet definition:
 * @struts.action path="/reports" name="reportsForm" input="/reports.jsp" scope="request" validate="true"
 */
public class ReportsAction extends Action {

	public static final String DASHBOARD_REPORTS      = "dashboardReports";
	public static final String DASHBOARD_GRAPHS       = "dashboardGraphs";
	public static final String DASHBOARD_REPORTS_ACCT = "dashboardReportsAcct";
	
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		HttpSession session =  request.getSession();
        DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);
		
        loadAllReports ( session, user );
		return ( mapping.findForward("reportsJSP") );
	}

	public void loadAllReports(HttpSession session, DbUserSession user) {
		loadReports ( session, user );
		loadReportsAcct ( session, user );
		loadGraphs ( session, user );
	}
	
	private void loadReports (HttpSession session, DbUserSession user) {
		FormsAvailableDAO formDao = new FormsAvailableDAO(user);
		ArrayList <DbFormsAvailable> forms = new ArrayList <DbFormsAvailable> (); 
		forms.addAll( formDao.getFormsAvailables(DbFormsAvailable.DASHBOARD_REPORTS, user.getRegion()) );
		session.setAttribute(DASHBOARD_REPORTS, forms);
	}
	
	private void loadGraphs (HttpSession session, DbUserSession user) {
		FormsAvailableDAO formDao = new FormsAvailableDAO(user);
		ArrayList <DbFormsAvailable> forms = new ArrayList <DbFormsAvailable> (); 
		forms.addAll( formDao.getFormsAvailables(DbFormsAvailable.DASHBOARD_GRAPHS,  user.getRegion()) );
		session.setAttribute(DASHBOARD_GRAPHS, forms);
	}
	
	private void loadReportsAcct (HttpSession session, DbUserSession user) {
		FormsAvailableDAO formDao = new FormsAvailableDAO(user);
		ArrayList <DbFormsAvailable> forms = new ArrayList <DbFormsAvailable> (); 
		forms.addAll( formDao.getFormsAvailables(DbFormsAvailable.DASHBOARD_REPORTS_ACCT,  user.getRegion()) );
		session.setAttribute(DASHBOARD_REPORTS_ACCT, forms);
	}
	
}