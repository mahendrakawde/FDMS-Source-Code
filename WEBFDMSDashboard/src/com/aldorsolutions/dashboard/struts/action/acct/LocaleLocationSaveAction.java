/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.aldorsolutions.dashboard.struts.action.acct;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.action.ActionRedirect;

import com.aldorassist.webfdms.delegate.InvoiceManager;
import com.aldorsolutions.dashboard.struts.form.acct.LocaleLocationEditForm;
import com.aldorsolutions.dashboard.struts.form.acct.VendorLocEditForm;
import com.aldorsolutions.webfdms.beans.DbApAccount;
import com.aldorsolutions.webfdms.beans.DbLocation;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.beans.FdmsDb;
import com.aldorsolutions.webfdms.checkwriter.dao.ApVendorDAO;
import com.aldorsolutions.webfdms.checkwriter.dao.ApVendorLocationDAO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorDTO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorLocationDTO;
import com.aldorsolutions.webfdms.database.DatabaseTransaction;
import com.aldorsolutions.webfdms.database.PersistenceException;
import com.aldorsolutions.webfdms.util.FormatNumber;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 06-28-2007
 * 
 * XDoclet definition:
 * @struts.action path="/vendorLocEdit" name="vendorLocEditForm" input="/acct/vendorLocEdit.jsp" scope="request" validate="true"
 */
public class LocaleLocationSaveAction extends Action {
	/*
	 * Generated Methods
	 */
	private Logger logger = Logger.getLogger(AcctVendorsEditAction.class.getName());
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		LocaleLocationEditForm localeLocationEditForm = (LocaleLocationEditForm) form;
		ActionMessages errors = new ActionMessages();
		HttpSession session = request.getSession();
		DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);

		if ( "Cancel".equals(localeLocationEditForm.getSubmitType() ) ) {
			ActionRedirect forward = new ActionRedirect (mapping.findForward("MainPage")); 
					
			return ( forward );
		}
		
		long localeID = localeLocationEditForm.getLocaleID();
		long locationID = localeLocationEditForm.getLocationID();
		//checknumber
        DbLocation arec = null;
        DatabaseTransaction t = null;
        //t = (com.aldorsolutions.webfdms.database.DatabaseTransaction) DatabaseTransaction.getTransaction(user);
		try {
			t = (com.aldorsolutions.webfdms.database.DatabaseTransaction)DatabaseTransaction.getTransaction(user);
		} catch (PersistenceException e) {
			System.out.println("ExportReport PersistenceException:" + e.getMessage());
		} 
		
        try {
            arec = FdmsDb.getInstance().getLocation(t,(int) locationID);
        } catch (Exception e) {
            logger.error("Error : ", e);
        } finally {
            if (t != null) {
				t.closeConnection();
				t = null;
			}
        }

        if (arec == null){
            //errors.add(ActionErrors.GLOBAL_ERROR, new ActionError("error.ui.checks.nolocation",form.getLocationID()));
            //return;
        }
        
        
        long checkNumber =  arec.getNextCheckNumber();
		

		ActionRedirect forward = new ActionRedirect (mapping.findForward("invoiceList")); 
		forward.addParameter("type", "approved" );
		forward.addParameter("locationID", locationID );
		forward.addParameter("localeID", localeID);
		forward.addParameter("checkNumber", checkNumber );
		return ( forward );
	}
}