/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.aldorsolutions.dashboard.struts.action.acct;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.aldorassist.webfdms.dao.LocationEmailDAO;
import com.aldorassist.webfdms.model.LocationEmailDTO;
import com.aldorsolutions.dashboard.struts.form.acct.AcctLocationEmailForm;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.util.FormatNumber;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 05-16-2007
 * 
 * XDoclet definition:
 * @struts.action path="/showLocationEmail" name="showLocationEmailForm" attribute="locationEmailForm" input="/acct/LocationEmail.jsp" scope="request" validate="true"
 */
public class AcctLocationEmailAction extends Action {
	/*
	 * Generated Methods
	 */
	Logger logger = Logger.getLogger(AcctLocationEmailAction.class);

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		AcctLocationEmailForm myForm = (AcctLocationEmailForm) form;
		

		String locEmailIDStr = request.getParameter("locationEmailID");
		ActionMessages errors = new ActionMessages();
		
		long locEmailID = FormatNumber.parseLong(locEmailIDStr);	
		
		if ( locEmailID <= 0 ) {
			String missingLoc = getResources(request).getMessage("error.acct.locationEmail.missingID");
			
			errors.add ( ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.exception", missingLoc) );
			saveErrors(request, errors);
			
			return ( mapping.findForward("locationEdit") );
		}
		
        HttpSession session =  request.getSession();
        DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);
        LocationEmailDAO locEmailDAO = new LocationEmailDAO(user);
        
        LocationEmailDTO locationEmail = locEmailDAO.getLocationEmail(locEmailID);
        
        logger.debug("locationEmails: " + locationEmail);
        
        
        myForm.setCompanyID(locationEmail.getCompanyID());
        myForm.setEmailAddress(locationEmail.getEmailAddress());
        myForm.setEmailType(locationEmail.getEmailType());
        myForm.setLocaleID(locationEmail.getLocaleID());
        myForm.setLocationEmailID(locationEmail.getLocationEmailID());
        myForm.setLocationID(locationEmail.getLocationID());
        
		return ( mapping.findForward("success"));
	}
}