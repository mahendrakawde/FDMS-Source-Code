/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 * CJongs
 */
package com.aldorsolutions.dashboard.struts.action.acct;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.aldorassist.webfdms.dao.LocationDAO;
import com.aldorassist.webfdms.model.LocationDTO;
import com.aldorsolutions.dashboard.struts.form.acct.AcctCheckListingForm;
import com.aldorsolutions.webfdms.admin.user.dao.UserDAO;
import com.aldorsolutions.webfdms.admin.user.model.UserLocationDTO;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.checkwriter.bean.CheckWriterManager;
import com.aldorsolutions.webfdms.checkwriter.model.ApMasterDTO;
import com.aldorsolutions.webfdms.checkwriter.model.CheckListDisplayDTO;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 04-27-2007
 * 
 * XDoclet definition:
 * @struts.action path="/acctCheckListing" name="acctCheckListingForm" 
 * input="/acct/checkApproval.jsp" scope="request" validate="true"
 */
public class AcctCheckListingAction extends Action {
	
	Logger logger = Logger.getLogger(AcctCheckListingAction.class);
	
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		AcctCheckListingForm acctCheckListingForm = (AcctCheckListingForm) form;

        HttpSession session =  request.getSession();
        ActionMessages errors = new ActionMessages();
        DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);

    	if (request.getParameter("type") != null) {
    		acctCheckListingForm.setListType(request.getParameter("type"));
    		
    	}
        
        
        CheckWriterManager cwMgr = new CheckWriterManager();
        
        ArrayList <ApMasterDTO> checks = cwMgr.getAllChecks(user);
        ArrayList <CheckListDisplayDTO> checkList = cwMgr.getCheckDisplayForUser(user, checks, -1, false);
        
        ArrayList <CheckListDisplayDTO> userChecks = new ArrayList <CheckListDisplayDTO> ();
        
        LocationDAO locDAO = new LocationDAO(user);

        try {
        	UserDAO userDao = new UserDAO();
        	
        	//this is for user vacation.
//        	ArrayList <UserDTO> users = userDao.getUserByVacationAccountant(user.getId());
//        	
//        	ArrayList <Integer> userIDs = new ArrayList <Integer> ();
//        	userIDs.add(user.getId());
//        	
//        	for ( UserDTO userDto : users ) {
//        		userIDs.add( (int) userDto.getUserId());
//        		
//        	}
        	
        	// This is old requirement which asking for just only accountant can see the check!!
            //ArrayList <LocationDTO> locations = locDAO.getLocationsByAccountant(user.getCompanyID(), userIDs);
            
    		// get the locations for the user

    		ArrayList  <UserLocationDTO> userLocations = userDao.getUserLocations(user.getId());
    		ArrayList <LocationDTO> allLocations = locDAO.getLocations(user.getCompanyID(), true);	
    		ArrayList <LocationDTO> locations = new ArrayList <LocationDTO>();
    		
    		for(LocationDTO location: allLocations ){
    			for (UserLocationDTO userLocation : userLocations){
    				if (userLocation.getLocationId()==location.getLocationID()){
    					locations.add(location);
    					break;
    				}
    			}
    		}	
    		//end getting locations           

    		if (acctCheckListingForm.getListType().compareToIgnoreCase("all")== 0) {
    			for ( CheckListDisplayDTO check : checkList ) {
	            		if ( check.getLocationID() == user.getLocationId() ) {
		            			userChecks.add(check);
	            			}
	            		}
    		}else {
	            for ( CheckListDisplayDTO check : checkList ) {
	                for ( LocationDTO location : locations ) {
	            		if ( check.getLocationID() == location.getLocationID() ) {
	            			if (check.getApprovalStatus() == ApMasterDTO.APPROVAL_STATUS_PENDING){
		            			userChecks.add(check);
		            			break;
	            			}
	            		}
	        		}
	    		}
    		}
    		
       		acctCheckListingForm.setChecks(userChecks);
        		
        } catch ( Exception e ) {
        	errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.exception", e.getMessage()) );
			saveMessages(request, errors);
			e.printStackTrace();
			return (mapping.findForward("MainPage"));
        }
        
   		return ( mapping.findForward("success") );
        
		// return ( mapping.findForward("failed") );
	}
	
}