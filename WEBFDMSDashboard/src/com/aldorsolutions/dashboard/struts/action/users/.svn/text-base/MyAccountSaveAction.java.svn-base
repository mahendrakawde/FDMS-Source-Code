/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.aldorsolutions.dashboard.struts.action.users;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessages;

import com.aldorsolutions.dashboard.struts.form.users.UserEditForm;
import com.aldorsolutions.webfdms.admin.user.dao.UserDAO;
import com.aldorsolutions.webfdms.admin.user.model.UserDTO;
import com.aldorsolutions.webfdms.beans.DbUser;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/**
 * MyEclipse Struts Creation date: 04-30-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/myAccountSave" name="myAccountEditForm"
 *                input="/user/myAccount.jsp" scope="session"
 *                validate="true"
 */
public class MyAccountSaveAction extends Action {
	Logger logger = Logger.getLogger(MyAccountSaveAction.class);
	
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		UserEditForm myForm = (UserEditForm) form;
		ActionMessages errors = new ActionMessages();
		
        HttpSession session =  request.getSession();
       
        
        saveUserForm(myForm, errors, request);
        
        session.setAttribute("myAccountEditForm", null);
        
		return (mapping.findForward("MainPage"));
	}
	
	private void saveUserForm (UserEditForm form, ActionMessages errors, HttpServletRequest request) {
		
        HttpSession session = request.getSession();
        DbUserSession userSession = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);

        UserDTO userDTO = null;
        UserDAO dao = new UserDAO();
        userDTO = dao.getUser(userSession.getId());

        userDTO.setCompanyID((int) form.getCompanyID());
        userDTO.setEmail(form.getEmail());
        userDTO.setFirstName(form.getFirstName());
        userDTO.setLastName(form.getLastName());
        userDTO.setInitials(form.getInitials());
        userDTO.setName(form.getUserName());
        
        if ( form.isVacationFlag() ) {
        	userDTO.setAccountingVacationFlag(true);
        	userDTO.setAccountingVacationUserID(form.getVacationUserID());
        } else {
        	userDTO.setAccountingVacationFlag(false);
        	userDTO.setAccountingVacationUserID(0);
        }
        
        if (dao.updateUser(userDTO)) {
            if ( form.isVacationFlag() ) {
                userSession.setAccountingVacationFlag(true);
                userSession.setAccountingVacationUserID(form.getVacationUserID());
            } else {
                userSession.setAccountingVacationFlag(false);
                userSession.setAccountingVacationUserID(0);
            }
            userSession.setCompanyID((int) form.getCompanyID());
            userSession.setEmailAddr(form.getEmail());
            userSession.setFirstName(form.getFirstName());
            userSession.setLastName(form.getLastName());
            userSession.setInitials(form.getInitials());
       	
        }
        
	}
}