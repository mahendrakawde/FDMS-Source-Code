<?xml version="1.0" encoding="UTF-8"?>
<project name="WS_AAR_BUILDER" basedir="." default="make.repo">
    <!--Auto generated ant build file-->
    <property environment="env"/>
    <property name="axis2.home" value="${env.AXIS2_HOME}"/>
    <property name="project.base.dir" value="."/>
    <property name="maven.class.path" value=""/>
    <property name="name" value="AldorServices"/>
	<property name="fddeName" value="FDDEServices"/>
	<property name="fddmsName" value="FDMSServices"/>
	<property name="helloAldorName" value="HelloAldorService"/>
	<property name="war.base.dir" value="${project.base.dir}/.."/>
    <property name="src" value="${project.base.dir}/aarsrc"/>
    <property name="test" value="${project.base.dir}/test"/>
    <property name="build" value="${project.base.dir}/build"/>
    <property name="classes" value="${build}/classes"/>
    <property name="lib" value="${build}/lib"/>
    <property name="resources" value="${project.base.dir}/resources"/>
    <property value="" name="jars.ok"/>
    <path id="axis2.class.path">
        <pathelement path="${java.class.path}"/>
        <pathelement path="${maven.class.path}"/>
        <fileset dir="${axis2.home}">
            <include name="lib/*.jar"/>
        </fileset>
        <fileset dir="${project.base.dir}">
            <include name="lib/*.jar"/>
        </fileset>
    </path>
    <target name="init">
        <mkdir dir="${build}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${lib}"/>
    </target>
    <target depends="init" name="pre.compile.test">
        <!--Test the classpath for the availability of necesary classes-->
        <available classpathref="axis2.class.path" property="stax.available" classname="javax.xml.stream.XMLStreamReader"/>
        <available classpathref="axis2.class.path" property="axis2.available" classname="org.apache.axis2.engine.AxisEngine"/>
        <condition property="jars.ok">
            <and>
                <isset property="stax.available"/>
                <isset property="axis2.available"/>
            </and>
        </condition>
        <!--Print out the availabilities-->
        <echo message="Stax Availability= ${stax.available}"/>
        <echo message="Axis2 Availability= ${axis2.available}"/>
    </target>
	<target name="refreshSrc">
		<echo message="Refreshing the source code..."/>
		<delete>
			<fileset dir="${src}/com/aldorsolutions/webservice/services">
			    <include name="**/*.java"/>
			</fileset>
		</delete>
		<copy toDir="${src}/com/aldorsolutions/webservice/services" overwrite="true">
			<fileset dir="${war.base.dir}/src/com/aldorsolutions/webservice/services" id="id">
			    <include name="**/*.java"/>
			</fileset>
		</copy>
	</target>
    <target depends="pre.compile.test,refreshSrc" name="compile.src" if="jars.ok">
        <javac debug="on" memoryMaximumSize="256m" memoryInitialSize="256m" fork="true" destdir="${classes}" srcdir="${src}">
            <classpath refid="axis2.class.path"/>
        	<classpath path="${project.base.dir}/lib/WsFdms-xmlBean.jar"/>
        	<classpath path="${project.base.dir}/lib/WsFdde-ADB.jar"/>
        	<classpath path="${project.base.dir}/../WebRoot/WEB-INF/classes"/>
        </javac>
    </target>
    <target depends="compile.src" name="compile.test" if="jars.ok">
        <javac debug="on" memoryMaximumSize="256m" memoryInitialSize="256m" fork="true" destdir="${classes}">
            <src path="${test}"/>
            <classpath refid="axis2.class.path"/>
        	<classpath path="${project.base.dir}/lib/WsFdms-xmlBean.jar"/>
        	<classpath path="${project.base.dir}/../WebRoot/WEB-INF/classes"/>
        </javac>
    </target>
    <target depends="pre.compile.test" name="echo.classpath.problem" unless="jars.ok">
        <echo message="The class path is not set right!                                Please make sure the following classes are in the classpath                                1. XmlBeans                                2. Stax                                3. Axis2                 "/>
    </target>
    <target depends="jar.server, fdde.jar.client,fdms.jar.client,hello.aldor.jar.client" name="jar.all"/>
    <target depends="compile.src,echo.classpath.problem" name="jar.server" if="jars.ok">
        <copy toDir="${classes}/META-INF" failonerror="false">
            <fileset dir="${resources}">
                <include name="*.xml"/>
                <include name="*.wsdl"/>
                <include name="*.xsd"/>
            </fileset>
        </copy>
        <jar destfile="${lib}/${name}.aar">
            <fileset excludes="**/Test.class" dir="${classes}"/>
        </jar>
    </target>
    <target if="jars.ok" name="fdde.jar.client" depends="compile.src">
        <jar destfile="${lib}/${fddeName}-client.jar">
            <fileset dir="${classes}">
                <exclude name="**/META-INF/*.*"/>
                <exclude name="**/lib/*.*"/>
            	<exclude name="**/Fdms*.class"/>
            	<exclude name="**/Hello*.class"/>
            	<exclude name="**/AldorGreetin*.class"/>
            	<exclude name="**/ExtensionMapper.class"/>
                <exclude name="**/*MessageReceiver*.class"/>
                <exclude name="**/*Skeleton.class"/>
            </fileset>
        </jar>
    </target>
	<target if="jars.ok" name="fdms.jar.client" depends="compile.src">
        <jar destfile="${lib}/${fddmsName}-client.jar">
            <fileset dir="${classes}">
                <exclude name="**/META-INF/*.*"/>
                <exclude name="**/lib/*.*"/>
            	<exclude name="**/Fdde*.class"/>
            	<exclude name="**/Hello*.class"/>
            	<exclude name="**/AldorGreetin*.class"/>
            	<exclude name="**/ExtensionMapper.class"/>
                <exclude name="**/*MessageReceiver*.class"/>
                <exclude name="**/*Skeleton.class"/>
            </fileset>
        </jar>
    </target>
	<target if="jars.ok" name="hello.aldor.jar.client" depends="compile.src">
        <jar destfile="${lib}/${helloAldorName}-client.jar">
            <fileset dir="${classes}">
                <exclude name="**/META-INF/*.*"/>
                <exclude name="**/lib/*.*"/>
            	<exclude name="**/Fdde*.class"/>
                <exclude name="**/Fdms*.class"/>
                <exclude name="**/*MessageReceiver*.class"/>
                <exclude name="**/*Skeleton.class"/>
            </fileset>
        </jar>
    </target>
    <target if="jars.ok" depends="jar.all" name="make.repo">
        <copy file="${build}/lib/${name}.aar" 
        	toDir="${war.base.dir}/WebRoot/WEB-INF/services/"
        	overwrite="true"
        />
    </target>
    <target if="jars.ok" depends="make.repo" name="start.server">
        <java fork="true" classname="org.apache.axis2.transport.http.SimpleHTTPServer">
            <arg value="${build}/repo"/>
            <classpath refid="axis2.class.path"/>
        </java>
    </target>
    <target if="jars.ok" depends="compile.test" name="run.test">
        <path id="test.class.path">
            <pathelement location="${lib}/${name}-test-client.jar"/>
            <path refid="axis2.class.path"/>
            <pathelement location="${classes}"/>
        </path>
        <mkdir dir="${build}/test-reports/"/>
        <junit haltonfailure="yes" printsummary="yes">
            <classpath refid="test.class.path"/>
            <formatter type="plain"/>
            <batchtest fork="yes" toDir="${build}/test-reports/">
                <fileset dir="${test}">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="clean">
        <delete dir="${build}"/>
    </target>
</project>
