package com.aldorsolutions.webfdms.beans;

/**
 * DbSpeedDataPeer supplies SQL for Persistent Class
 * Creation date: (12/30/2001 4:13:09 PM)
 * @author: 
 */
public class DbSpeedDataPeer extends com.aldorsolutions.webfdms.database.DatabasePeer {

	static public final String IDENTITY    	= "Identity";
	static public final String CATEGORY	 	= "TabCategory";
	static public final String LOCALE		= "Locale";
	static public final String LOCATIONID	= "LocationId";
	static public final String DATA	    	= "TabData";
	static public final String SORT	    	= "SortSequence";
	/**
	 * getInsertSql method comment.
	 */
	protected java.sql.PreparedStatement getInsertSql(			
			com.aldorsolutions.webfdms.database.DatabaseTransaction t, 
			com.aldorsolutions.webfdms.database.Persistent p) throws com.aldorsolutions.webfdms.database.PersistenceException {
	
			java.sql.Connection connection = null;
			java.sql.PreparedStatement pstmt=null;
			try {
				DbSpeedData item=(DbSpeedData)p;
				connection = t.getConnection();
				pstmt = connection.prepareStatement(
					"INSERT INTO speeddata (Identity, TabCategory, Locale, " +
					"LocationId, TabData, SortSequence) VALUES (0,?,?,?,?,?)");
				pstmt.setString(1, item.getCategory());
				pstmt.setInt   (2, item.getLocale());
				pstmt.setInt   (3, item.getLocationId());
				pstmt.setString(4, item.getData());
				pstmt.setInt   (5, item.getSortSequence());
				return pstmt;
			}
			catch (java.sql.SQLException e){
				throw new com.aldorsolutions.webfdms.database.PersistenceException("DbSpeedDataPeer.Insert",e);
			}
	}
	/**
	 * getRemoveSql method comment.
	 */
	protected java.sql.PreparedStatement getRemoveSql(
			com.aldorsolutions.webfdms.database.DatabaseTransaction t, 
			com.aldorsolutions.webfdms.database.Persistent p) throws com.aldorsolutions.webfdms.database.PersistenceException {
		
			java.sql.PreparedStatement pstmt=null;
			java.sql.Connection connection = null;
			try {
				connection = t.getConnection();
				pstmt = connection.prepareStatement(
						"DELETE FROM speeddata WHERE (Identity=?)");
				pstmt.setInt(1,p.getId());
				return pstmt;
			} catch (java.sql.SQLException e){
				throw new com.aldorsolutions.webfdms.database.PersistenceException("DbSpeedData.Remove",e);
			}
	}
	
	/**
	 * getRestoreSql method comment.
	 */
	protected String getRestoreSql(com.aldorsolutions.webfdms.database.Persistent p) {
		return ("SELECT * FROM speeddata WHERE (Identity = " + p.getId() + ")");
	}
	
	/**
	 * getUpdateSql method comment.
	 */
	protected java.sql.PreparedStatement getUpdateSql(
			com.aldorsolutions.webfdms.database.DatabaseTransaction t, 
			com.aldorsolutions.webfdms.database.Persistent p) 
		throws com.aldorsolutions.webfdms.database.PersistenceException {
		
			java.sql.Connection connection = null;
			java.sql.PreparedStatement pstmt=null;
			
			try {
				DbSpeedData item=(DbSpeedData)p;
				connection = t.getConnection();
				pstmt = connection.prepareStatement(
						"UPDATE speeddata SET TabCategory=?, Locale=?, " +
						"LocationId=?, TabData=?, SortSequence=? " +
						"WHERE (Identity=?)");
				pstmt.setString (1, item.getCategory());
				pstmt.setInt    (2, item.getLocale());
				pstmt.setInt	(3, item.getLocationId());
				pstmt.setString (4, item.getData());
				pstmt.setInt	(5, item.getSortSequence());
				pstmt.setInt	(6, item.getId());
				return pstmt;
				
			} catch (java.sql.SQLException e){
				throw new com.aldorsolutions.webfdms.database.PersistenceException("DbSpeedDataPeer.Update", e);
			}
	}
}
