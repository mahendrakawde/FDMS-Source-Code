
package com.easypay.api;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "EasyPayAPISoap", targetNamespace = "http://localhost")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EasyPayAPISoap {


    /**
     * Service method for processing recurring or subscription payments due as of today.
     * 
     * @param merchRec
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EasyPay_ProcessRecurringConsentsDue", action = "http://localhost/EasyPay_ProcessRecurringConsentsDue")
    @WebResult(name = "EasyPay_ProcessRecurringConsentsDueResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_ProcessRecurringConsentsDue", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayProcessRecurringConsentsDue")
    @ResponseWrapper(localName = "EasyPay_ProcessRecurringConsentsDueResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayProcessRecurringConsentsDueResponse")
    public String easyPayProcessRecurringConsentsDue(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method getting the number of scheduled recurring and subscription payments due as of today.  It is the total of all merchant accounts.
     * 
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EasyPay_GetScheduledDueCount", action = "http://localhost/EasyPay_GetScheduledDueCount")
    @WebResult(name = "EasyPay_GetScheduledDueCountResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_GetScheduledDueCount", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetScheduledDueCount")
    @ResponseWrapper(localName = "EasyPay_GetScheduledDueCountResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetScheduledDueCountResponse")
    public String easyPayGetScheduledDueCount(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for changing a scheduled payment from either a recurring or subscription consent.
     * 
     * @param merchRec
     * @param newDate
     * @param schedRecNo
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_RescheduleRecurringPayment", action = "http://localhost/EasyPay_RescheduleRecurringPayment")
    @WebResult(name = "EasyPay_RescheduleRecurringPaymentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_RescheduleRecurringPayment", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayRescheduleRecurringPayment")
    @ResponseWrapper(localName = "EasyPay_RescheduleRecurringPaymentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayRescheduleRecurringPaymentResponse")
    public boolean easyPayRescheduleRecurringPayment(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "SchedRecNo", targetNamespace = "http://localhost")
        int schedRecNo,
        @WebParam(name = "NewDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar newDate,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for seaching for existing consents
     * 
     * @param merchRec
     * @param fromDate
     * @param status
     * @param value
     * @param toDate
     * @param type
     * @param option
     * @param passkey
     * @return
     *     returns com.easypay.api.ArrayOfEPEasyPay
     */
    @WebMethod(operationName = "EasyPay_getConsents", action = "http://localhost/EasyPay_getConsents")
    @WebResult(name = "EasyPay_getConsentsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_getConsents", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetConsents")
    @ResponseWrapper(localName = "EasyPay_getConsentsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetConsentsResponse")
    public ArrayOfEPEasyPay easyPayGetConsents(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "Option", targetNamespace = "http://localhost")
        String option,
        @WebParam(name = "Value", targetNamespace = "http://localhost")
        String value,
        @WebParam(name = "Type", targetNamespace = "http://localhost")
        String type,
        @WebParam(name = "Status", targetNamespace = "http://localhost")
        String status,
        @WebParam(name = "FromDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar fromDate,
        @WebParam(name = "ToDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar toDate,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec);

    /**
     * Service method for placeing a consent in an inactive status
     * 
     * @param consentID
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_DeActivateConsents", action = "http://localhost/EasyPay_DeActivateConsents")
    @WebResult(name = "EasyPay_DeActivateConsentsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_DeActivateConsents", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayDeActivateConsents")
    @ResponseWrapper(localName = "EasyPay_DeActivateConsentsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayDeActivateConsentsResponse")
    public boolean easyPayDeActivateConsents(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for placeing a scheduled payment on hold
     * 
     * @param schedRecNo
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_PutPaymentOnHold", action = "http://localhost/EasyPay_PutPaymentOnHold")
    @WebResult(name = "EasyPay_PutPaymentOnHoldResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_PutPaymentOnHold", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayPutPaymentOnHold")
    @ResponseWrapper(localName = "EasyPay_PutPaymentOnHoldResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayPutPaymentOnHoldResponse")
    public boolean easyPayPutPaymentOnHold(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "SchedRecNo", targetNamespace = "http://localhost")
        int schedRecNo,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for placeing a consent in an inactive status
     * 
     * @param consentID
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_ActivateConsents", action = "http://localhost/EasyPay_ActivateConsents")
    @WebResult(name = "EasyPay_ActivateConsentsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_ActivateConsents", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayActivateConsents")
    @ResponseWrapper(localName = "EasyPay_ActivateConsentsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayActivateConsentsResponse")
    public boolean easyPayActivateConsents(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for placeing a scheduled payment on hold
     * 
     * @param schedRecNo
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_ResumePayment", action = "http://localhost/EasyPay_ResumePayment")
    @WebResult(name = "EasyPay_ResumePaymentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_ResumePayment", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayResumePayment")
    @ResponseWrapper(localName = "EasyPay_ResumePaymentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayResumePaymentResponse")
    public boolean easyPayResumePayment(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "SchedRecNo", targetNamespace = "http://localhost")
        int schedRecNo,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for cancelling a consent
     * 
     * @param consentID
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_CancelConsents", action = "http://localhost/EasyPay_CancelConsents")
    @WebResult(name = "EasyPay_CancelConsentsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_CancelConsents", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCancelConsents")
    @ResponseWrapper(localName = "EasyPay_CancelConsentsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCancelConsentsResponse")
    public boolean easyPayCancelConsents(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for cancelling scheduled payment
     * 
     * @param schedRecNo
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_CancelPayment", action = "http://localhost/EasyPay_CancelPayment")
    @WebResult(name = "EasyPay_CancelPaymentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_CancelPayment", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCancelPayment")
    @ResponseWrapper(localName = "EasyPay_CancelPaymentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCancelPaymentResponse")
    public boolean easyPayCancelPayment(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "SchedRecNo", targetNamespace = "http://localhost")
        int schedRecNo,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for retrieving a recurring consent payment schedule
     * 
     * @param consentID
     * @param passkey
     * @return
     *     returns com.easypay.api.ArrayOfEPSchedule
     */
    @WebMethod(operationName = "EasyPay_getSchedule", action = "http://localhost/EasyPay_getSchedule")
    @WebResult(name = "EasyPay_getScheduleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_getSchedule", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetSchedule")
    @ResponseWrapper(localName = "EasyPay_getScheduleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetScheduleResponse")
    public ArrayOfEPSchedule easyPayGetSchedule(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID);

    /**
     * Service method for Consent form text formatted for desktop printer
     * 
     * @param consentID
     * @param merchLocID
     * @param copy
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EasyPay_getConsentSlip", action = "http://localhost/EasyPay_getConsentSlip")
    @WebResult(name = "EasyPay_getConsentSlipResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_getConsentSlip", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetConsentSlip")
    @ResponseWrapper(localName = "EasyPay_getConsentSlipResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetConsentSlipResponse")
    public String easyPayGetConsentSlip(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "MerchLocID", targetNamespace = "http://localhost")
        int merchLocID,
        @WebParam(name = "Copy", targetNamespace = "http://localhost")
        String copy);

    /**
     * Service method for creating a Subscription Consent
     * 
     * @param lastName
     * @param startDate
     * @param state
     * @param expDate
     * @param period
     * @param referenceID
     * @param pmtAmount
     * @param custLastName
     * @param city
     * @param cardNo
     * @param custFirstName
     * @param merchRec
     * @param email
     * @param address
     * @param zipCode
     * @param service
     * @param firstName
     * @param user
     * @param passkey
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EasyPay_CreateSubscriptionConsent", action = "http://localhost/EasyPay_CreateSubscriptionConsent")
    @WebResult(name = "EasyPay_CreateSubscriptionConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_CreateSubscriptionConsent", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateSubscriptionConsent")
    @ResponseWrapper(localName = "EasyPay_CreateSubscriptionConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateSubscriptionConsentResponse")
    public int easyPayCreateSubscriptionConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpDate", targetNamespace = "http://localhost")
        String expDate,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "ZipCode", targetNamespace = "http://localhost")
        String zipCode,
        @WebParam(name = "CustFirstName", targetNamespace = "http://localhost")
        String custFirstName,
        @WebParam(name = "CustLastName", targetNamespace = "http://localhost")
        String custLastName,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "Pmt_Amount", targetNamespace = "http://localhost")
        float pmtAmount,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for retrieving cards expiring n days ahead.
     * 
     * @param merchRec
     * @param noDays
     * @param passkey
     * @return
     *     returns com.easypay.api.ArrayOfExpiredCards
     */
    @WebMethod(operationName = "EasyPay_findExpiredCards", action = "http://localhost/EasyPay_findExpiredCards")
    @WebResult(name = "EasyPay_findExpiredCardsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_findExpiredCards", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayFindExpiredCards")
    @ResponseWrapper(localName = "EasyPay_findExpiredCardsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayFindExpiredCardsResponse")
    public ArrayOfExpiredCards easyPayFindExpiredCards(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "NoDays", targetNamespace = "http://localhost")
        int noDays,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec);

    /**
     * Service method for retrieving scheduled payment reponse by status (F = Failed or P = Paid) and date range. Filtering on ConsentID can also be provided.  ConsentID = 0 will provide any consents.
     * 
     * @param startDate
     * @param merchRec
     * @param consentID
     * @param status
     * @param endDate
     * @param passkey
     * @return
     *     returns com.easypay.api.ArrayOfSchedulePaymentResponse
     */
    @WebMethod(operationName = "EasyPay_ScheduledPaymentResponse", action = "http://localhost/EasyPay_ScheduledPaymentResponse")
    @WebResult(name = "EasyPay_ScheduledPaymentResponseResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_ScheduledPaymentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayScheduledPaymentResponse")
    @ResponseWrapper(localName = "EasyPay_ScheduledPaymentResponseResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayScheduledPaymentResponseResponse")
    public ArrayOfSchedulePaymentResponse easyPayScheduledPaymentResponse(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "Status", targetNamespace = "http://localhost")
        String status,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "EndDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar endDate,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec);

    /**
     * Service method for Changeing a subscription consent payment amount.
     * 
     * @param amount
     * @param consentID
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_ChangeSubscriptionPayment", action = "http://localhost/EasyPay_ChangeSubscriptionPayment")
    @WebResult(name = "EasyPay_ChangeSubscriptionPaymentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_ChangeSubscriptionPayment", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayChangeSubscriptionPayment")
    @ResponseWrapper(localName = "EasyPay_ChangeSubscriptionPaymentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayChangeSubscriptionPaymentResponse")
    public boolean easyPayChangeSubscriptionPayment(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method to find the next scheduled payment date for a recurring or subscription consent.
     * 
     * @param consentID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EasyPay_GetNextScheduledPaymentDate", action = "http://localhost/EasyPay_GetNextScheduledPaymentDate")
    @WebResult(name = "EasyPay_GetNextScheduledPaymentDateResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_GetNextScheduledPaymentDate", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetNextScheduledPaymentDate")
    @ResponseWrapper(localName = "EasyPay_GetNextScheduledPaymentDateResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetNextScheduledPaymentDateResponse")
    public String easyPayGetNextScheduledPaymentDate(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID);

    /**
     * Service method to find the next scheduled payment date for a recurring or subscription consent.
     * 
     * @param paymentDate
     * @param consentID
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_ChangeNextScheduledPaymentDate", action = "http://localhost/EasyPay_ChangeNextScheduledPaymentDate")
    @WebResult(name = "EasyPay_ChangeNextScheduledPaymentDateResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_ChangeNextScheduledPaymentDate", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayChangeNextScheduledPaymentDate")
    @ResponseWrapper(localName = "EasyPay_ChangeNextScheduledPaymentDateResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayChangeNextScheduledPaymentDateResponse")
    public boolean easyPayChangeNextScheduledPaymentDate(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "PaymentDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar paymentDate,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (* New) Service method modify/update a consent account credit card expiration date.
     * 
     * @param consentID
     * @param expDate
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_UpdateConsentAccountExpirationDate", action = "http://localhost/EasyPay_UpdateConsentAccountExpirationDate")
    @WebResult(name = "EasyPay_UpdateConsentAccountExpirationDateResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_UpdateConsentAccountExpirationDate", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayUpdateConsentAccountExpirationDate")
    @ResponseWrapper(localName = "EasyPay_UpdateConsentAccountExpirationDateResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayUpdateConsentAccountExpirationDateResponse")
    public boolean easyPayUpdateConsentAccountExpirationDate(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "ExpDate", targetNamespace = "http://localhost")
        String expDate,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (* New) Service method for retreiving all Consent detail information including consent terms and account information. This method returns a dataset with a single record.
     * 
     * @param consentID
     * @param passkey
     * @return
     *     returns com.easypay.api.EasyPayGetConsentDetailInformationResponse.EasyPayGetConsentDetailInformationResult
     */
    @WebMethod(operationName = "EasyPay_GetConsentDetailInformation", action = "http://localhost/EasyPay_GetConsentDetailInformation")
    @WebResult(name = "EasyPay_GetConsentDetailInformationResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_GetConsentDetailInformation", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetConsentDetailInformation")
    @ResponseWrapper(localName = "EasyPay_GetConsentDetailInformationResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayGetConsentDetailInformationResponse")
    public com.easypay.api.EasyPayGetConsentDetailInformationResponse.EasyPayGetConsentDetailInformationResult easyPayGetConsentDetailInformation(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID);

    /**
     * (* New) Service method modify/update a consent account email address for receipts to be sent.
     * 
     * @param consentID
     * @param email
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_UpdateConsentEmail", action = "http://localhost/EasyPay_UpdateConsentEmail")
    @WebResult(name = "EasyPay_UpdateConsentEmailResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_UpdateConsentEmail", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayUpdateConsentEmail")
    @ResponseWrapper(localName = "EasyPay_UpdateConsentEmailResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayUpdateConsentEmailResponse")
    public boolean easyPayUpdateConsentEmail(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (* New) Service method modify/update end date (number of days) for a OneTime or Annual Consent to be valid.
     * 
     * @param consentID
     * @param endDate
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_UpdateConsentEndDate", action = "http://localhost/EasyPay_UpdateConsentEndDate")
    @WebResult(name = "EasyPay_UpdateConsentEndDateResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_UpdateConsentEndDate", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayUpdateConsentEndDate")
    @ResponseWrapper(localName = "EasyPay_UpdateConsentEndDateResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayUpdateConsentEndDateResponse")
    public boolean easyPayUpdateConsentEndDate(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "EndDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar endDate,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method to modify the max allowed amount to charge to a Annual or OneTime consent.
     * 
     * @param amount
     * @param consentID
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_ChangeConsentMaxAllowed", action = "http://localhost/EasyPay_ChangeConsentMaxAllowed")
    @WebResult(name = "EasyPay_ChangeConsentMaxAllowedResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_ChangeConsentMaxAllowed", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayChangeConsentMaxAllowed")
    @ResponseWrapper(localName = "EasyPay_ChangeConsentMaxAllowedResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayChangeConsentMaxAllowedResponse")
    public boolean easyPayChangeConsentMaxAllowed(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method to modify an existing Recurring scheduled Payment.  You can change the scheduled payment date, amount or status of the payment.
     * 
     * @param amount
     * @param status
     * @param schedRecNo
     * @param scheduleDate
     * @param user
     * @param passkey
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EasyPay_ModifyScheduledPayment", action = "http://localhost/EasyPay_ModifyScheduledPayment")
    @WebResult(name = "EasyPay_ModifyScheduledPaymentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_ModifyScheduledPayment", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayModifyScheduledPayment")
    @ResponseWrapper(localName = "EasyPay_ModifyScheduledPaymentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayModifyScheduledPaymentResponse")
    public boolean easyPayModifyScheduledPayment(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "SchedRecNo", targetNamespace = "http://localhost")
        int schedRecNo,
        @WebParam(name = "ScheduleDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar scheduleDate,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Status", targetNamespace = "http://localhost")
        String status,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Utility service method retrieving an application setting.
     * 
     * @param option
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_getSettingValue", action = "http://localhost/UTIL_getSettingValue")
    @WebResult(name = "UTIL_getSettingValueResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_getSettingValue", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetSettingValue")
    @ResponseWrapper(localName = "UTIL_getSettingValueResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetSettingValueResponse")
    public String utilGetSettingValue(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "Option", targetNamespace = "http://localhost")
        String option);

    /**
     * Utility service method validating a credit card exists in the Bin tables.  This method returns back the card type if valid or NO or XX if not a valid card number.
     * 
     * @param cardNumber
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_ValidateCard", action = "http://localhost/UTIL_ValidateCard")
    @WebResult(name = "UTIL_ValidateCardResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_ValidateCard", targetNamespace = "http://localhost", className = "com.easypay.api.UTILValidateCard")
    @ResponseWrapper(localName = "UTIL_ValidateCardResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILValidateCardResponse")
    public String utilValidateCard(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNumber", targetNamespace = "http://localhost")
        String cardNumber);

    /**
     * Utility service method determines of a card is a Debit Card. Returns the string TRUE of it is a Debit Card else FALSE or an appropriate error message.
     * 
     * @param cardNumber
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_isDebitCard", action = "http://localhost/UTIL_isDebitCard")
    @WebResult(name = "UTIL_isDebitCardResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_isDebitCard", targetNamespace = "http://localhost", className = "com.easypay.api.UTILIsDebitCard")
    @ResponseWrapper(localName = "UTIL_isDebitCardResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILIsDebitCardResponse")
    public String utilIsDebitCard(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNumber", targetNamespace = "http://localhost")
        String cardNumber);

    /**
     * Utility for sending email. You must supply at least a To address and a Subject string.
     * 
     * @param to
     * @param body
     * @param subject
     * @param from
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_sendEmail", action = "http://localhost/UTIL_sendEmail")
    @WebResult(name = "UTIL_sendEmailResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_sendEmail", targetNamespace = "http://localhost", className = "com.easypay.api.UTILSendEmail")
    @ResponseWrapper(localName = "UTIL_sendEmailResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILSendEmailResponse")
    public String utilSendEmail(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "To", targetNamespace = "http://localhost")
        String to,
        @WebParam(name = "From", targetNamespace = "http://localhost")
        String from,
        @WebParam(name = "Subject", targetNamespace = "http://localhost")
        String subject,
        @WebParam(name = "Body", targetNamespace = "http://localhost")
        String body);

    /**
     * Utility service method determines of a card is a LevelII(Commercial) credit card. Returns the string TRUE of it is a LevelII Card else FALSE or an appropriate error message.
     * 
     * @param cardNumber
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_isLevelII", action = "http://localhost/UTIL_isLevelII")
    @WebResult(name = "UTIL_isLevelIIResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_isLevelII", targetNamespace = "http://localhost", className = "com.easypay.api.UTILIsLevelII")
    @ResponseWrapper(localName = "UTIL_isLevelIIResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILIsLevelIIResponse")
    public String utilIsLevelII(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNumber", targetNamespace = "http://localhost")
        String cardNumber);

    /**
     * Utility service method determines of a Visa Card is a Commercial Card (Corporate, Business or Purchase). Returns the string TRUE of it is a Commercial Card else FALSE or an appropriate error message.
     * 
     * @param cardNumber
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_isCommercialCard", action = "http://localhost/UTIL_isCommercialCard")
    @WebResult(name = "UTIL_isCommercialCardResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_isCommercialCard", targetNamespace = "http://localhost", className = "com.easypay.api.UTILIsCommercialCard")
    @ResponseWrapper(localName = "UTIL_isCommercialCardResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILIsCommercialCardResponse")
    public String utilIsCommercialCard(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNumber", targetNamespace = "http://localhost")
        String cardNumber);

    /**
     * Utility service method returns voice authorization to present to Voice operator.
     * 
     * @param amount
     * @param cardHolder
     * @param expirationDate
     * @param merchRec
     * @param cardNumber
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_getVoiceAuthorizationMessageFromCardInformation", action = "http://localhost/UTIL_getVoiceAuthorizationMessageFromCardInformation")
    @WebResult(name = "UTIL_getVoiceAuthorizationMessageFromCardInformationResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_getVoiceAuthorizationMessageFromCardInformation", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetVoiceAuthorizationMessageFromCardInformation")
    @ResponseWrapper(localName = "UTIL_getVoiceAuthorizationMessageFromCardInformationResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetVoiceAuthorizationMessageFromCardInformationResponse")
    public String utilGetVoiceAuthorizationMessageFromCardInformation(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "CardNumber", targetNamespace = "http://localhost")
        String cardNumber,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CardHolder", targetNamespace = "http://localhost")
        String cardHolder,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount);

    /**
     * Utility service method returns voice authorization to present to Voice operator based on a specified previous hold-call transaction. 
     * 
     * @param recNo
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_getVoiceAuthorizationMessageFromTransactionID", action = "http://localhost/UTIL_getVoiceAuthorizationMessageFromTransactionID")
    @WebResult(name = "UTIL_getVoiceAuthorizationMessageFromTransactionIDResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_getVoiceAuthorizationMessageFromTransactionID", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetVoiceAuthorizationMessageFromTransactionID")
    @ResponseWrapper(localName = "UTIL_getVoiceAuthorizationMessageFromTransactionIDResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetVoiceAuthorizationMessageFromTransactionIDResponse")
    public String utilGetVoiceAuthorizationMessageFromTransactionID(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo);

    /**
     * Utility service method returns voice authorization to present to Voice operator based on information stored in a consent on file. 
     * 
     * @param amount
     * @param consentID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_getVoiceAuthorizationMessageFromConsentID", action = "http://localhost/UTIL_getVoiceAuthorizationMessageFromConsentID")
    @WebResult(name = "UTIL_getVoiceAuthorizationMessageFromConsentIDResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_getVoiceAuthorizationMessageFromConsentID", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetVoiceAuthorizationMessageFromConsentID")
    @ResponseWrapper(localName = "UTIL_getVoiceAuthorizationMessageFromConsentIDResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetVoiceAuthorizationMessageFromConsentIDResponse")
    public String utilGetVoiceAuthorizationMessageFromConsentID(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount);

    /**
     * This Method returns the merchant settings parameters for the specified MerchRec
     * 
     * @param merchRec
     * @param passkey
     * @return
     *     returns com.easypay.api.UTILGetMerchantSettingsResponse.UTILGetMerchantSettingsResult
     */
    @WebMethod(operationName = "UTIL_getMerchantSettings", action = "http://localhost/UTIL_getMerchantSettings")
    @WebResult(name = "UTIL_getMerchantSettingsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_getMerchantSettings", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetMerchantSettings")
    @ResponseWrapper(localName = "UTIL_getMerchantSettingsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILGetMerchantSettingsResponse")
    public com.easypay.api.UTILGetMerchantSettingsResponse.UTILGetMerchantSettingsResult utilGetMerchantSettings(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec);

    /**
     * This Method closes a pre-authorization so it can't proceesed again.
     * 
     * @param recNo
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_closePreAuthorization", action = "http://localhost/UTIL_closePreAuthorization")
    @WebResult(name = "UTIL_closePreAuthorizationResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_closePreAuthorization", targetNamespace = "http://localhost", className = "com.easypay.api.UTILClosePreAuthorization")
    @ResponseWrapper(localName = "UTIL_closePreAuthorizationResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILClosePreAuthorizationResponse")
    public String utilClosePreAuthorization(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo);

    /**
     * (*New) Utility service method determines if a transaction has lineitems associated with it. Returns the string TRUE if it does, else returns FALSE.
     * 
     * @param recNo
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_isLineItems", action = "http://localhost/UTIL_isLineItems")
    @WebResult(name = "UTIL_isLineItemsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_isLineItems", targetNamespace = "http://localhost", className = "com.easypay.api.UTILIsLineItems")
    @ResponseWrapper(localName = "UTIL_isLineItemsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILIsLineItemsResponse")
    public String utilIsLineItems(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo);

    /**
     * (*New) Utility service method to status a specified LineItem. Returns the string TRUE if done, else returns FALSE.
     * 
     * @param status
     * @param recNo
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UTIL_statusLineItem", action = "http://localhost/UTIL_statusLineItem")
    @WebResult(name = "UTIL_statusLineItemResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "UTIL_statusLineItem", targetNamespace = "http://localhost", className = "com.easypay.api.UTILStatusLineItem")
    @ResponseWrapper(localName = "UTIL_statusLineItemResponse", targetNamespace = "http://localhost", className = "com.easypay.api.UTILStatusLineItemResponse")
    public String utilStatusLineItem(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo,
        @WebParam(name = "Status", targetNamespace = "http://localhost")
        String status);

    /**
     * This method computes a convenience fee based on card number and whether taxable or not.
     * 
     * @param amount
     * @param cardNo
     * @param taxable
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GOV_CalcConvenienceFee", action = "http://localhost/GOV_CalcConvenienceFee")
    @WebResult(name = "GOV_CalcConvenienceFeeResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "GOV_CalcConvenienceFee", targetNamespace = "http://localhost", className = "com.easypay.api.GOVCalcConvenienceFee")
    @ResponseWrapper(localName = "GOV_CalcConvenienceFeeResponse", targetNamespace = "http://localhost", className = "com.easypay.api.GOVCalcConvenienceFeeResponse")
    public String govCalcConvenienceFee(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Taxable", targetNamespace = "http://localhost")
        boolean taxable);

    /**
     * Service method for doing a single Gov payment resulting in two transactions with automatic calculation of the convenience fee. Passing in a MerchID of 0 will use the system default merchant account.  Otherwise specifing a MerchID will direct the payment to the respective account.  If either transaction is declined a both are assumed declined and anything authorized will be immediately voided.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param taxable
     * @param street
     * @param track1
     * @param state
     * @param track2
     * @param city
     * @param amount
     * @param cardNo
     * @param refID
     * @param cvv
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Gov_Sale", action = "http://localhost/Gov_Sale")
    @WebResult(name = "Gov_SaleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Gov_Sale", targetNamespace = "http://localhost", className = "com.easypay.api.GovSale")
    @ResponseWrapper(localName = "Gov_SaleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.GovSaleResponse")
    public String govSale(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Taxable", targetNamespace = "http://localhost")
        boolean taxable,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for doing a single Gov payment resulting in two transactions with automatic calculation of the convenience fee. Passing in a MerchID of 0 will use the system default merchant account.  Otherwise specifing a MerchID will direct the payment to the respective account.
     * 
     * @param lastName
     * @param zip
     * @param dlState
     * @param phone
     * @param acctNo
     * @param acctType
     * @param street
     * @param state
     * @param acctSource
     * @param city
     * @param amount
     * @param refID
     * @param routingNo
     * @param dl
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Gov_ACH_Send", action = "http://localhost/Gov_ACH_Send")
    @WebResult(name = "Gov_ACH_SendResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Gov_ACH_Send", targetNamespace = "http://localhost", className = "com.easypay.api.GovACHSend")
    @ResponseWrapper(localName = "Gov_ACH_SendResponse", targetNamespace = "http://localhost", className = "com.easypay.api.GovACHSendResponse")
    public String govACHSend(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "AcctNo", targetNamespace = "http://localhost")
        String acctNo,
        @WebParam(name = "RoutingNo", targetNamespace = "http://localhost")
        String routingNo,
        @WebParam(name = "AcctType", targetNamespace = "http://localhost")
        String acctType,
        @WebParam(name = "AcctSource", targetNamespace = "http://localhost")
        String acctSource,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Phone", targetNamespace = "http://localhost")
        String phone,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "DL", targetNamespace = "http://localhost")
        String dl,
        @WebParam(name = "DLState", targetNamespace = "http://localhost")
        String dlState,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * This method computes a convenience fee for ACH based on database setup.
     * 
     * @param amount
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GOV_CalcACHConvenienceFee", action = "http://localhost/GOV_CalcACHConvenienceFee")
    @WebResult(name = "GOV_CalcACHConvenienceFeeResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "GOV_CalcACHConvenienceFee", targetNamespace = "http://localhost", className = "com.easypay.api.GOVCalcACHConvenienceFee")
    @ResponseWrapper(localName = "GOV_CalcACHConvenienceFeeResponse", targetNamespace = "http://localhost", className = "com.easypay.api.GOVCalcACHConvenienceFeeResponse")
    public String govCalcACHConvenienceFee(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount);

    /**
     * Service method for a transactions identified by ReferenceID. This voids convenience fee along with all sale transactions with a single call.
     * 
     * @param referenceID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GOV_voidTransactions", action = "http://localhost/GOV_voidTransactions")
    @WebResult(name = "GOV_voidTransactionsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "GOV_voidTransactions", targetNamespace = "http://localhost", className = "com.easypay.api.GOVVoidTransactions")
    @ResponseWrapper(localName = "GOV_voidTransactionsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.GOVVoidTransactionsResponse")
    public String govVoidTransactions(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID);

    /**
     * Service method for Authentication to the service and retrieving a passkey.
     * 
     * @param username
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Authenticate", action = "http://localhost/Authenticate")
    @WebResult(name = "AuthenticateResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Authenticate", targetNamespace = "http://localhost", className = "com.easypay.api.Authenticate")
    @ResponseWrapper(localName = "AuthenticateResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AuthenticateResponse")
    public String authenticate(
        @WebParam(name = "username", targetNamespace = "http://localhost")
        String username,
        @WebParam(name = "password", targetNamespace = "http://localhost")
        String password);

    /**
     * Service method for Authentication to the service and retrieving a passkey.
     * 
     * @param username
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetApplicationKey", action = "http://localhost/GetApplicationKey")
    @WebResult(name = "GetApplicationKeyResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "GetApplicationKey", targetNamespace = "http://localhost", className = "com.easypay.api.GetApplicationKey")
    @ResponseWrapper(localName = "GetApplicationKeyResponse", targetNamespace = "http://localhost", className = "com.easypay.api.GetApplicationKeyResponse")
    public String getApplicationKey(
        @WebParam(name = "username", targetNamespace = "http://localhost")
        String username,
        @WebParam(name = "password", targetNamespace = "http://localhost")
        String password);

    /**
     * Service method for Authentication to the service and retrieving a passkey.
     * 
     * @param appKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AuthenticateApplication", action = "http://localhost/AuthenticateApplication")
    @WebResult(name = "AuthenticateApplicationResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AuthenticateApplication", targetNamespace = "http://localhost", className = "com.easypay.api.AuthenticateApplication")
    @ResponseWrapper(localName = "AuthenticateApplicationResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AuthenticateApplicationResponse")
    public String authenticateApplication(
        @WebParam(name = "AppKey", targetNamespace = "http://localhost")
        String appKey);

    /**
     * Service method for submitting a GETI_ACH transaction.  Drivers License and Identity information may or may not be required depending on the GETI Merchant Setup.  RefID is Stored in CUSTOM1 field, Other custom fields are optional. When Drivers license and Identity Verification fields are required, pass in blank string if nothing supplied.
     * 
     * @param custom1
     * @param custom2
     * @param checkNo
     * @param custom3
     * @param phone
     * @param dlState
     * @param state
     * @param address1
     * @param address2
     * @param custLastName
     * @param serviceDescription
     * @param city
     * @param amount
     * @param custFirstName
     * @param merchRec
     * @param routingNo
     * @param firstName
     * @param dlNo
     * @param lastName
     * @param zip
     * @param identityType
     * @param courtesyCardID
     * @param accountNo
     * @param companyName
     * @param refID
     * @param accountType
     * @param identityValue
     * @param user
     * @param identifier
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_GETI_Send", action = "http://localhost/ACH_GETI_Send")
    @WebResult(name = "ACH_GETI_SendResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_GETI_Send", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETISend")
    @ResponseWrapper(localName = "ACH_GETI_SendResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETISendResponse")
    public String achGETISend(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CompanyName", targetNamespace = "http://localhost")
        String companyName,
        @WebParam(name = "AccountNo", targetNamespace = "http://localhost")
        String accountNo,
        @WebParam(name = "RoutingNo", targetNamespace = "http://localhost")
        String routingNo,
        @WebParam(name = "AccountType", targetNamespace = "http://localhost")
        String accountType,
        @WebParam(name = "CheckNo", targetNamespace = "http://localhost")
        String checkNo,
        @WebParam(name = "Identifier", targetNamespace = "http://localhost")
        String identifier,
        @WebParam(name = "Address1", targetNamespace = "http://localhost")
        String address1,
        @WebParam(name = "Address2", targetNamespace = "http://localhost")
        String address2,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "Phone", targetNamespace = "http://localhost")
        String phone,
        @WebParam(name = "DLNo", targetNamespace = "http://localhost")
        String dlNo,
        @WebParam(name = "DLState", targetNamespace = "http://localhost")
        String dlState,
        @WebParam(name = "IdentityType", targetNamespace = "http://localhost")
        String identityType,
        @WebParam(name = "IdentityValue", targetNamespace = "http://localhost")
        String identityValue,
        @WebParam(name = "CustFirstName", targetNamespace = "http://localhost")
        String custFirstName,
        @WebParam(name = "CustLastName", targetNamespace = "http://localhost")
        String custLastName,
        @WebParam(name = "CourtesyCardID", targetNamespace = "http://localhost")
        String courtesyCardID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Custom1", targetNamespace = "http://localhost")
        String custom1,
        @WebParam(name = "Custom2", targetNamespace = "http://localhost")
        String custom2,
        @WebParam(name = "Custom3", targetNamespace = "http://localhost")
        String custom3,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * This method returns the GETI Template required for a transation.  The Template determines what data is required to provided, Templates ending in R require drivers liscense information to be provided. All templates but CNV required Identity fields for DOB_YEAR or SSN_LAST_4
     * 
     * @param merchRec
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_GETI_GetTemplate", action = "http://localhost/ACH_GETI_GetTemplate")
    @WebResult(name = "ACH_GETI_GetTemplateResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_GETI_GetTemplate", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETIGetTemplate")
    @ResponseWrapper(localName = "ACH_GETI_GetTemplateResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETIGetTemplateResponse")
    public String achGETIGetTemplate(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec);

    /**
     * This method creates a ONETIME consent for GETI. If the account is a consumer account, provide FirstName and LastName.  If the account is a business account, provide the CompanyName.  Drivers license information and identity verification depend on the specific merchant account requirements determined by GETI.  If drivers liscense info is rquired, it must be provided.  Likewies if Identity Verification is required, it also must be provided.  Both are optional otherwise. The IdentityType can only the value of DOB_YEAR or SSN4
     * 
     * @param startDate
     * @param phone
     * @param dlState
     * @param state
     * @param address1
     * @param address2
     * @param city
     * @param serviceDescription
     * @param merchRec
     * @param routingNo
     * @param firstName
     * @param dlNo
     * @param zip
     * @param lastName
     * @param identityType
     * @param noDays
     * @param maxAmount
     * @param accountNo
     * @param companyName
     * @param refID
     * @param email
     * @param accountType
     * @param identityValue
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_GETI_CreateOneTimeConsent", action = "http://localhost/ACH_GETI_CreateOneTimeConsent")
    @WebResult(name = "ACH_GETI_CreateOneTimeConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_GETI_CreateOneTimeConsent", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateOneTimeConsent")
    @ResponseWrapper(localName = "ACH_GETI_CreateOneTimeConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateOneTimeConsentResponse")
    public String achGETICreateOneTimeConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CompanyName", targetNamespace = "http://localhost")
        String companyName,
        @WebParam(name = "AccountNo", targetNamespace = "http://localhost")
        String accountNo,
        @WebParam(name = "RoutingNo", targetNamespace = "http://localhost")
        String routingNo,
        @WebParam(name = "AccountType", targetNamespace = "http://localhost")
        String accountType,
        @WebParam(name = "Address1", targetNamespace = "http://localhost")
        String address1,
        @WebParam(name = "Address2", targetNamespace = "http://localhost")
        String address2,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "Phone", targetNamespace = "http://localhost")
        String phone,
        @WebParam(name = "DLNo", targetNamespace = "http://localhost")
        String dlNo,
        @WebParam(name = "DLState", targetNamespace = "http://localhost")
        String dlState,
        @WebParam(name = "IdentityType", targetNamespace = "http://localhost")
        String identityType,
        @WebParam(name = "IdentityValue", targetNamespace = "http://localhost")
        String identityValue,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "NoDays", targetNamespace = "http://localhost")
        int noDays,
        @WebParam(name = "MaxAmount", targetNamespace = "http://localhost")
        float maxAmount,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * This method creates a ANNUAL consent for GETI. If the account is a consumer account, provide FirstName and LastName.  If the account is a business account, provide the CompanyName.  Drivers license information and identity verification depend on the specific merchant account requirements determined by GETI.  If drivers liscense info is rquired, it must be provided.  Likewies if Identity Verification is required, it also must be provided.  Both are optional otherwise. The IdentityType can only the value of DOB_YEAR or SSN4
     * 
     * @param startDate
     * @param phone
     * @param dlState
     * @param state
     * @param address1
     * @param address2
     * @param city
     * @param serviceDescription
     * @param merchRec
     * @param routingNo
     * @param firstName
     * @param dlNo
     * @param zip
     * @param lastName
     * @param identityType
     * @param noDays
     * @param maxAmount
     * @param accountNo
     * @param companyName
     * @param refID
     * @param email
     * @param accountType
     * @param identityValue
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_GETI_CreateAnnualConsent", action = "http://localhost/ACH_GETI_CreateAnnualConsent")
    @WebResult(name = "ACH_GETI_CreateAnnualConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_GETI_CreateAnnualConsent", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateAnnualConsent")
    @ResponseWrapper(localName = "ACH_GETI_CreateAnnualConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateAnnualConsentResponse")
    public String achGETICreateAnnualConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CompanyName", targetNamespace = "http://localhost")
        String companyName,
        @WebParam(name = "AccountNo", targetNamespace = "http://localhost")
        String accountNo,
        @WebParam(name = "RoutingNo", targetNamespace = "http://localhost")
        String routingNo,
        @WebParam(name = "AccountType", targetNamespace = "http://localhost")
        String accountType,
        @WebParam(name = "Address1", targetNamespace = "http://localhost")
        String address1,
        @WebParam(name = "Address2", targetNamespace = "http://localhost")
        String address2,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "Phone", targetNamespace = "http://localhost")
        String phone,
        @WebParam(name = "DLNo", targetNamespace = "http://localhost")
        String dlNo,
        @WebParam(name = "DLState", targetNamespace = "http://localhost")
        String dlState,
        @WebParam(name = "IdentityType", targetNamespace = "http://localhost")
        String identityType,
        @WebParam(name = "IdentityValue", targetNamespace = "http://localhost")
        String identityValue,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "NoDays", targetNamespace = "http://localhost")
        int noDays,
        @WebParam(name = "MaxAmount", targetNamespace = "http://localhost")
        float maxAmount,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * This method creates a RECURRING consent for GETI based on Number of Payments to be made. If the account is a consumer account, provide FirstName and LastName.  If the account is a business account, provide the CompanyName.  Drivers license information and identity verification depend on the specific merchant account requirements determined by GETI.  If drivers liscense info is rquired, it must be provided.  Likewies if Identity Verification is required, it also must be provided.  Both are optional otherwise. The IdentityType can only the value of DOB_YEAR or SSN4
     * 
     * @param lastPayment
     * @param startDate
     * @param phone
     * @param dlState
     * @param state
     * @param address1
     * @param address2
     * @param city
     * @param serviceDescription
     * @param merchRec
     * @param routingNo
     * @param totalAmount
     * @param firstName
     * @param dlNo
     * @param zip
     * @param lastName
     * @param identityType
     * @param accountNo
     * @param companyName
     * @param period
     * @param refID
     * @param email
     * @param accountType
     * @param identityValue
     * @param user
     * @param passkey
     * @param noPayments
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_GETI_CreateRecurringConsentByNoPayments", action = "http://localhost/ACH_GETI_CreateRecurringConsentByNoPayments")
    @WebResult(name = "ACH_GETI_CreateRecurringConsentByNoPaymentsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_GETI_CreateRecurringConsentByNoPayments", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateRecurringConsentByNoPayments")
    @ResponseWrapper(localName = "ACH_GETI_CreateRecurringConsentByNoPaymentsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateRecurringConsentByNoPaymentsResponse")
    public String achGETICreateRecurringConsentByNoPayments(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CompanyName", targetNamespace = "http://localhost")
        String companyName,
        @WebParam(name = "AccountNo", targetNamespace = "http://localhost")
        String accountNo,
        @WebParam(name = "RoutingNo", targetNamespace = "http://localhost")
        String routingNo,
        @WebParam(name = "AccountType", targetNamespace = "http://localhost")
        String accountType,
        @WebParam(name = "Address1", targetNamespace = "http://localhost")
        String address1,
        @WebParam(name = "Address2", targetNamespace = "http://localhost")
        String address2,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "Phone", targetNamespace = "http://localhost")
        String phone,
        @WebParam(name = "DLNo", targetNamespace = "http://localhost")
        String dlNo,
        @WebParam(name = "DLState", targetNamespace = "http://localhost")
        String dlState,
        @WebParam(name = "IdentityType", targetNamespace = "http://localhost")
        String identityType,
        @WebParam(name = "IdentityValue", targetNamespace = "http://localhost")
        String identityValue,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "TotalAmount", targetNamespace = "http://localhost")
        float totalAmount,
        @WebParam(name = "NoPayments", targetNamespace = "http://localhost")
        int noPayments,
        @WebParam(name = "LastPayment", targetNamespace = "http://localhost")
        float lastPayment,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * This method creates a RECURRING consent for GETI based on the payment amount to be made. If the account is a consumer account, provide FirstName and LastName.  If the account is a business account, provide the CompanyName.  Drivers license information and identity verification depend on the specific merchant account requirements determined by GETI.  If drivers liscense info is rquired, it must be provided.  Likewies if Identity Verification is required, it also must be provided.  Both are optional otherwise. The IdentityType can only the value of DOB_YEAR or SSN4
     * 
     * @param startDate
     * @param phone
     * @param dlState
     * @param state
     * @param address1
     * @param address2
     * @param city
     * @param serviceDescription
     * @param paymentAmount
     * @param merchRec
     * @param routingNo
     * @param totalAmount
     * @param firstName
     * @param dlNo
     * @param zip
     * @param lastName
     * @param identityType
     * @param accountNo
     * @param companyName
     * @param period
     * @param refID
     * @param email
     * @param accountType
     * @param identityValue
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_GETI_CreateRecurringConsentByPaymentAmount", action = "http://localhost/ACH_GETI_CreateRecurringConsentByPaymentAmount")
    @WebResult(name = "ACH_GETI_CreateRecurringConsentByPaymentAmountResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_GETI_CreateRecurringConsentByPaymentAmount", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateRecurringConsentByPaymentAmount")
    @ResponseWrapper(localName = "ACH_GETI_CreateRecurringConsentByPaymentAmountResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateRecurringConsentByPaymentAmountResponse")
    public String achGETICreateRecurringConsentByPaymentAmount(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CompanyName", targetNamespace = "http://localhost")
        String companyName,
        @WebParam(name = "AccountNo", targetNamespace = "http://localhost")
        String accountNo,
        @WebParam(name = "RoutingNo", targetNamespace = "http://localhost")
        String routingNo,
        @WebParam(name = "AccountType", targetNamespace = "http://localhost")
        String accountType,
        @WebParam(name = "Address1", targetNamespace = "http://localhost")
        String address1,
        @WebParam(name = "Address2", targetNamespace = "http://localhost")
        String address2,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "Phone", targetNamespace = "http://localhost")
        String phone,
        @WebParam(name = "DLNo", targetNamespace = "http://localhost")
        String dlNo,
        @WebParam(name = "DLState", targetNamespace = "http://localhost")
        String dlState,
        @WebParam(name = "IdentityType", targetNamespace = "http://localhost")
        String identityType,
        @WebParam(name = "IdentityValue", targetNamespace = "http://localhost")
        String identityValue,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "TotalAmount", targetNamespace = "http://localhost")
        float totalAmount,
        @WebParam(name = "PaymentAmount", targetNamespace = "http://localhost")
        float paymentAmount,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * This method creates a RECURRING consent for GETI based on the payment amount to be made and the period of payment. If the account is a consumer account, provide FirstName and LastName.  If the account is a business account, provide the CompanyName.  Drivers license information and identity verification depend on the specific merchant account requirements determined by GETI.  If drivers liscense info is rquired, it must be provided.  Likewies if Identity Verification is required, it also must be provided.  Both are optional otherwise. The IdentityType can only the value of DOB_YEAR or SSN4
     * 
     * @param startDate
     * @param phone
     * @param dlState
     * @param state
     * @param address1
     * @param address2
     * @param city
     * @param serviceDescription
     * @param paymentAmount
     * @param merchRec
     * @param routingNo
     * @param firstName
     * @param dlNo
     * @param zip
     * @param lastName
     * @param identityType
     * @param accountNo
     * @param companyName
     * @param period
     * @param refID
     * @param email
     * @param accountType
     * @param identityValue
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_GETI_CreateSubscriptionConsent", action = "http://localhost/ACH_GETI_CreateSubscriptionConsent")
    @WebResult(name = "ACH_GETI_CreateSubscriptionConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_GETI_CreateSubscriptionConsent", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateSubscriptionConsent")
    @ResponseWrapper(localName = "ACH_GETI_CreateSubscriptionConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHGETICreateSubscriptionConsentResponse")
    public String achGETICreateSubscriptionConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CompanyName", targetNamespace = "http://localhost")
        String companyName,
        @WebParam(name = "AccountNo", targetNamespace = "http://localhost")
        String accountNo,
        @WebParam(name = "RoutingNo", targetNamespace = "http://localhost")
        String routingNo,
        @WebParam(name = "AccountType", targetNamespace = "http://localhost")
        String accountType,
        @WebParam(name = "Address1", targetNamespace = "http://localhost")
        String address1,
        @WebParam(name = "Address2", targetNamespace = "http://localhost")
        String address2,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "Phone", targetNamespace = "http://localhost")
        String phone,
        @WebParam(name = "DLNo", targetNamespace = "http://localhost")
        String dlNo,
        @WebParam(name = "DLState", targetNamespace = "http://localhost")
        String dlState,
        @WebParam(name = "IdentityType", targetNamespace = "http://localhost")
        String identityType,
        @WebParam(name = "IdentityValue", targetNamespace = "http://localhost")
        String identityValue,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "PaymentAmount", targetNamespace = "http://localhost")
        float paymentAmount,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for ACH Transaction.
     * 
     * @param lastName
     * @param zip
     * @param dlState
     * @param phone
     * @param acctNo
     * @param acctType
     * @param street
     * @param state
     * @param acctSource
     * @param city
     * @param amount
     * @param refID
     * @param routingNo
     * @param dl
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_Send", action = "http://localhost/ACH_Send")
    @WebResult(name = "ACH_SendResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_Send", targetNamespace = "http://localhost", className = "com.easypay.api.ACHSend")
    @ResponseWrapper(localName = "ACH_SendResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHSendResponse")
    public String achSend(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "AcctNo", targetNamespace = "http://localhost")
        String acctNo,
        @WebParam(name = "RoutingNo", targetNamespace = "http://localhost")
        String routingNo,
        @WebParam(name = "AcctType", targetNamespace = "http://localhost")
        String acctType,
        @WebParam(name = "AcctSource", targetNamespace = "http://localhost")
        String acctSource,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Phone", targetNamespace = "http://localhost")
        String phone,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "DL", targetNamespace = "http://localhost")
        String dl,
        @WebParam(name = "DLState", targetNamespace = "http://localhost")
        String dlState,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (Change*) Service method for authorizing a credit card sale. This method is modified to include Service Description
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param state
     * @param serviceDescription
     * @param city
     * @param cardNo
     * @param amount
     * @param refID
     * @param cvv
     * @param firstName
     * @param user
     * @param passkey
     * @param merchID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_Sale", action = "http://localhost/CreditCard_Sale")
    @WebResult(name = "CreditCard_SaleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_Sale", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardSale")
    @ResponseWrapper(localName = "CreditCard_SaleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardSaleResponse")
    public String creditCardSale(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (Change*) Service method for authorizing a purchase card (LevelII) sale. LevelII fields include TaxInd (0=Tax not provided, 1=Tax included, 2=Non taxable), CustRefNo (Purchase Order or Order Number), SalesTax amount (0.00), Shipping zipcode. This method is modified to include Service Description.
     * 
     * @param custRefNo
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param custDefData
     * @param street
     * @param state
     * @param serviceDescription
     * @param city
     * @param shippingZip
     * @param cardNo
     * @param amount
     * @param refID
     * @param cvv
     * @param firstName
     * @param user
     * @param taxInd
     * @param merchID
     * @param salesTax
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_SaleLevelII", action = "http://localhost/CreditCard_SaleLevelII")
    @WebResult(name = "CreditCard_SaleLevelIIResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_SaleLevelII", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardSaleLevelII")
    @ResponseWrapper(localName = "CreditCard_SaleLevelIIResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardSaleLevelIIResponse")
    public String creditCardSaleLevelII(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "TaxInd", targetNamespace = "http://localhost")
        int taxInd,
        @WebParam(name = "CustRefNo", targetNamespace = "http://localhost")
        String custRefNo,
        @WebParam(name = "SalesTax", targetNamespace = "http://localhost")
        float salesTax,
        @WebParam(name = "ShippingZip", targetNamespace = "http://localhost")
        String shippingZip,
        @WebParam(name = "CustDefData", targetNamespace = "http://localhost")
        String custDefData,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (Change *) Service method for authorizing a credit card sale with Card Present. This method has been modified to include Service Description
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param track1
     * @param state
     * @param track2
     * @param serviceDescription
     * @param city
     * @param amount
     * @param cardNo
     * @param refID
     * @param cvv
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_CardPresentSale", action = "http://localhost/CreditCard_CardPresentSale")
    @WebResult(name = "CreditCard_CardPresentSaleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_CardPresentSale", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardCardPresentSale")
    @ResponseWrapper(localName = "CreditCard_CardPresentSaleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardCardPresentSaleResponse")
    public String creditCardCardPresentSale(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (Change*) Service method for authorizing a purchase card (LevelII) sale with Card Present. LevelII fields include TaxInd (0=Tax not provided, 1=Tax included, 2=Non taxable), CustRefNo (Purchase Order or Order Number), SalesTax amount (0.00), Shipping zipcode. This method has been modified to include Service Description
     * 
     * @param custRefNo
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param custDefData
     * @param street
     * @param track1
     * @param state
     * @param track2
     * @param serviceDescription
     * @param city
     * @param shippingZip
     * @param amount
     * @param cardNo
     * @param refID
     * @param cvv
     * @param firstName
     * @param user
     * @param taxInd
     * @param merchID
     * @param salesTax
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_CardPresentSaleLevelII", action = "http://localhost/CreditCard_CardPresentSaleLevelII")
    @WebResult(name = "CreditCard_CardPresentSaleLevelIIResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_CardPresentSaleLevelII", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardCardPresentSaleLevelII")
    @ResponseWrapper(localName = "CreditCard_CardPresentSaleLevelIIResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardCardPresentSaleLevelIIResponse")
    public String creditCardCardPresentSaleLevelII(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "TaxInd", targetNamespace = "http://localhost")
        int taxInd,
        @WebParam(name = "CustRefNo", targetNamespace = "http://localhost")
        String custRefNo,
        @WebParam(name = "SalesTax", targetNamespace = "http://localhost")
        float salesTax,
        @WebParam(name = "ShippingZip", targetNamespace = "http://localhost")
        String shippingZip,
        @WebParam(name = "CustDefData", targetNamespace = "http://localhost")
        String custDefData,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (Change*) Service method for authorization only. This method has been modified to include Service Description
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param state
     * @param serviceDescription
     * @param city
     * @param cardNo
     * @param amount
     * @param refID
     * @param cvv
     * @param firstName
     * @param user
     * @param passkey
     * @param merchID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_AuthOnly", action = "http://localhost/CreditCard_AuthOnly")
    @WebResult(name = "CreditCard_AuthOnlyResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_AuthOnly", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardAuthOnly")
    @ResponseWrapper(localName = "CreditCard_AuthOnlyResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardAuthOnlyResponse")
    public String creditCardAuthOnly(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (Change*) Service method for authorization only with Card Present. This method has been modified to include Service Description
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param track1
     * @param state
     * @param track2
     * @param serviceDescription
     * @param city
     * @param amount
     * @param cardNo
     * @param refID
     * @param cvv
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_CardPresentAuthOnly", action = "http://localhost/CreditCard_CardPresentAuthOnly")
    @WebResult(name = "CreditCard_CardPresentAuthOnlyResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_CardPresentAuthOnly", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardCardPresentAuthOnly")
    @ResponseWrapper(localName = "CreditCard_CardPresentAuthOnlyResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardCardPresentAuthOnlyResponse")
    public String creditCardCardPresentAuthOnly(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for refunding credit card sale.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param state
     * @param city
     * @param cardNo
     * @param amount
     * @param refID
     * @param firstName
     * @param user
     * @param passkey
     * @param merchID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_Refund", action = "http://localhost/CreditCard_Refund")
    @WebResult(name = "CreditCard_RefundResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_Refund", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardRefund")
    @ResponseWrapper(localName = "CreditCard_RefundResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardRefundResponse")
    public String creditCardRefund(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for full refund of a provided transaction number.
     * 
     * @param recno
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_Refund_FullAmount", action = "http://localhost/CreditCard_Refund_FullAmount")
    @WebResult(name = "CreditCard_Refund_FullAmountResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_Refund_FullAmount", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardRefundFullAmount")
    @ResponseWrapper(localName = "CreditCard_Refund_FullAmountResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardRefundFullAmountResponse")
    public String creditCardRefundFullAmount(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "recno", targetNamespace = "http://localhost")
        int recno,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for partial refund of a provided transaction number.
     * 
     * @param amt
     * @param recno
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_Refund_PartialAmount", action = "http://localhost/CreditCard_Refund_PartialAmount")
    @WebResult(name = "CreditCard_Refund_PartialAmountResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_Refund_PartialAmount", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardRefundPartialAmount")
    @ResponseWrapper(localName = "CreditCard_Refund_PartialAmountResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardRefundPartialAmountResponse")
    public String creditCardRefundPartialAmount(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "recno", targetNamespace = "http://localhost")
        int recno,
        @WebParam(name = "amt", targetNamespace = "http://localhost")
        float amt,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for Forced Authorization.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param apprCode
     * @param street
     * @param state
     * @param city
     * @param cardNo
     * @param amount
     * @param refID
     * @param firstName
     * @param user
     * @param passkey
     * @param merchID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_ForcedAuth", action = "http://localhost/CreditCard_ForcedAuth")
    @WebResult(name = "CreditCard_ForcedAuthResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_ForcedAuth", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardForcedAuth")
    @ResponseWrapper(localName = "CreditCard_ForcedAuthResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardForcedAuthResponse")
    public String creditCardForcedAuth(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "ApprCode", targetNamespace = "http://localhost")
        String apprCode,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for Forced Authorization for the full amount of a previous AuthOnly.
     * 
     * @param recno
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_ForcedAuth_FullAmount", action = "http://localhost/CreditCard_ForcedAuth_FullAmount")
    @WebResult(name = "CreditCard_ForcedAuth_FullAmountResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_ForcedAuth_FullAmount", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardForcedAuthFullAmount")
    @ResponseWrapper(localName = "CreditCard_ForcedAuth_FullAmountResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardForcedAuthFullAmountResponse")
    public String creditCardForcedAuthFullAmount(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "recno", targetNamespace = "http://localhost")
        int recno,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for Forced Authorization for lesser amount of a previous AuthOnly.
     * 
     * @param amount
     * @param recno
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_ForcedAuth_LesserAmount", action = "http://localhost/CreditCard_ForcedAuth_LesserAmount")
    @WebResult(name = "CreditCard_ForcedAuth_LesserAmountResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_ForcedAuth_LesserAmount", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardForcedAuthLesserAmount")
    @ResponseWrapper(localName = "CreditCard_ForcedAuth_LesserAmountResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardForcedAuthLesserAmountResponse")
    public String creditCardForcedAuthLesserAmount(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "recno", targetNamespace = "http://localhost")
        int recno,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for retreiving AVS Status of last authorized transaction.
     * 
     * @param rsp
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_getAVSResponse", action = "http://localhost/CreditCard_getAVSResponse")
    @WebResult(name = "CreditCard_getAVSResponseResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getAVSResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetAVSResponse")
    @ResponseWrapper(localName = "CreditCard_getAVSResponseResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetAVSResponseResponse")
    public String creditCardGetAVSResponse(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "rsp", targetNamespace = "http://localhost")
        String rsp);

    /**
     * Service method for retreiving CVV Status of last authorized transaction.
     * 
     * @param rsp
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_getCVVResponse", action = "http://localhost/CreditCard_getCVVResponse")
    @WebResult(name = "CreditCard_getCVVResponseResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getCVVResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetCVVResponse")
    @ResponseWrapper(localName = "CreditCard_getCVVResponseResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetCVVResponseResponse")
    public String creditCardGetCVVResponse(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "rsp", targetNamespace = "http://localhost")
        String rsp);

    /**
     * Service method for retreiving the Authorization Source Code of last authorized transaction.
     * 
     * @param rsp
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_getAuthorizationSourceCode", action = "http://localhost/CreditCard_getAuthorizationSourceCode")
    @WebResult(name = "CreditCard_getAuthorizationSourceCodeResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getAuthorizationSourceCode", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetAuthorizationSourceCode")
    @ResponseWrapper(localName = "CreditCard_getAuthorizationSourceCodeResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetAuthorizationSourceCodeResponse")
    public String creditCardGetAuthorizationSourceCode(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "rsp", targetNamespace = "http://localhost")
        String rsp);

    /**
     * Service method for retreiving the approval code of last authorized transaction.
     * 
     * @param rsp
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_getApprovalCode", action = "http://localhost/CreditCard_getApprovalCode")
    @WebResult(name = "CreditCard_getApprovalCodeResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getApprovalCode", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetApprovalCode")
    @ResponseWrapper(localName = "CreditCard_getApprovalCodeResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetApprovalCodeResponse")
    public String creditCardGetApprovalCode(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "rsp", targetNamespace = "http://localhost")
        String rsp);

    /**
     * Service method for retreiving the error detail explanation of last authorized transaction.
     * 
     * @param rsp
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_getErrorExplanation", action = "http://localhost/CreditCard_getErrorExplanation")
    @WebResult(name = "CreditCard_getErrorExplanationResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getErrorExplanation", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetErrorExplanation")
    @ResponseWrapper(localName = "CreditCard_getErrorExplanationResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetErrorExplanationResponse")
    public String creditCardGetErrorExplanation(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "rsp", targetNamespace = "http://localhost")
        String rsp);

    /**
     * Service method for retreiving the transaction record number (TransID) of last authorized transaction.
     * 
     * @param rsp
     * @param passkey
     * @return
     *     returns int
     */
    @WebMethod(operationName = "CreditCard_getTransactionRECNO", action = "http://localhost/CreditCard_getTransactionRECNO")
    @WebResult(name = "CreditCard_getTransactionRECNOResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getTransactionRECNO", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetTransactionRECNO")
    @ResponseWrapper(localName = "CreditCard_getTransactionRECNOResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetTransactionRECNOResponse")
    public int creditCardGetTransactionRECNO(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "rsp", targetNamespace = "http://localhost")
        String rsp);

    /**
     * Service method for retreiving the transaction details of specified transaction (TransID).
     * 
     * @param recno
     * @param passkey
     * @return
     *     returns com.easypay.api.Transaction
     */
    @WebMethod(operationName = "CreditCard_getTransactionDETAIL", action = "http://localhost/CreditCard_getTransactionDETAIL")
    @WebResult(name = "CreditCard_getTransactionDETAILResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getTransactionDETAIL", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetTransactionDETAIL")
    @ResponseWrapper(localName = "CreditCard_getTransactionDETAILResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetTransactionDETAILResponse")
    public Transaction creditCardGetTransactionDETAIL(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "Recno", targetNamespace = "http://localhost")
        int recno);

    /**
     * Service method for voiding a transaction by specified transaction (TransID.
     * 
     * @param recno
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_voidTransaction", action = "http://localhost/CreditCard_voidTransaction")
    @WebResult(name = "CreditCard_voidTransactionResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_voidTransaction", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardVoidTransaction")
    @ResponseWrapper(localName = "CreditCard_voidTransactionResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardVoidTransactionResponse")
    public String creditCardVoidTransaction(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "Recno", targetNamespace = "http://localhost")
        int recno);

    /**
     * Service method for seaching for Transactions
     * 
     * @param lastName
     * @param merchRec
     * @param fromDate
     * @param status
     * @param refID
     * @param server
     * @param toDate
     * @param firstName
     * @param cardNumber
     * @param passkey
     * @return
     *     returns com.easypay.api.ArrayOfTransaction
     */
    @WebMethod(operationName = "CreditCard_getTransactions", action = "http://localhost/CreditCard_getTransactions")
    @WebResult(name = "CreditCard_getTransactionsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getTransactions", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetTransactions")
    @ResponseWrapper(localName = "CreditCard_getTransactionsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetTransactionsResponse")
    public ArrayOfTransaction creditCardGetTransactions(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FromDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar fromDate,
        @WebParam(name = "ToDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar toDate,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNumber", targetNamespace = "http://localhost")
        String cardNumber,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Status", targetNamespace = "http://localhost")
        String status,
        @WebParam(name = "Server", targetNamespace = "http://localhost")
        String server,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec);

    /**
     * Service method for getting Settlement History Records
     * 
     * @param merchRec
     * @param fromDate
     * @param toDate
     * @param passkey
     * @return
     *     returns com.easypay.api.ArrayOfSettleHistory
     */
    @WebMethod(operationName = "CreditCard_getSettlementHistory", action = "http://localhost/CreditCard_getSettlementHistory")
    @WebResult(name = "CreditCard_getSettlementHistoryResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getSettlementHistory", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetSettlementHistory")
    @ResponseWrapper(localName = "CreditCard_getSettlementHistoryResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetSettlementHistoryResponse")
    public ArrayOfSettleHistory creditCardGetSettlementHistory(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FromDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar fromDate,
        @WebParam(name = "ToDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar toDate,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec);

    /**
     * Service method for Receiving Sales Receipt text formatted for desktop printer
     * 
     * @param recno
     * @param merchLocID
     * @param copy
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_getSalesReceipt", action = "http://localhost/CreditCard_getSalesReceipt")
    @WebResult(name = "CreditCard_getSalesReceiptResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_getSalesReceipt", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetSalesReceipt")
    @ResponseWrapper(localName = "CreditCard_getSalesReceiptResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetSalesReceiptResponse")
    public String creditCardGetSalesReceipt(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "recno", targetNamespace = "http://localhost")
        int recno,
        @WebParam(name = "MerchLocID", targetNamespace = "http://localhost")
        int merchLocID,
        @WebParam(name = "Copy", targetNamespace = "http://localhost")
        String copy);

    /**
     * Service method for authorizing a split sale transaction.  This accommodates multiple merchant account payments using the same card with a single service call.  If any of the authorizations are declined, all are declined.  Any authorized transactions prior to the decline will be automatically voided. Any number of accounts can be processed, but the array of amounts must match up one for one to the array of MerchRecs referencing the merchant accounts for processing.  This method applies to Card Present and non-present transactions.  Just leave the track data fields blank for non-present sales.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param track1
     * @param state
     * @param track2
     * @param city
     * @param amount
     * @param cardNo
     * @param refID
     * @param cvv
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_Split_Sale", action = "http://localhost/CreditCard_Split_Sale")
    @WebResult(name = "CreditCard_Split_SaleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_Split_Sale", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardSplitSale")
    @ResponseWrapper(localName = "CreditCard_Split_SaleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardSplitSaleResponse")
    public String creditCardSplitSale(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        ArrayOfFloat amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        ArrayOfInt merchID);

    /**
     * Service method for requesting end of day settlement of open transactions.
     * 
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_SettleNow", action = "http://localhost/CreditCard_SettleNow")
    @WebResult(name = "CreditCard_SettleNowResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_SettleNow", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardSettleNow")
    @ResponseWrapper(localName = "CreditCard_SettleNowResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardSettleNowResponse")
    public String creditCardSettleNow(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method finding the number of open transactions to be settled. It is the total for all merchant accounts
     * 
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreditCard_GetSettlementCount", action = "http://localhost/CreditCard_GetSettlementCount")
    @WebResult(name = "CreditCard_GetSettlementCountResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "CreditCard_GetSettlementCount", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetSettlementCount")
    @ResponseWrapper(localName = "CreditCard_GetSettlementCountResponse", targetNamespace = "http://localhost", className = "com.easypay.api.CreditCardGetSettlementCountResponse")
    public String creditCardGetSettlementCount(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for a restaurant immediate sale including tip with or with card present.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param track1
     * @param state
     * @param track2
     * @param tip
     * @param city
     * @param amount
     * @param cardNo
     * @param refID
     * @param cvv
     * @param server
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Restaurant_Sale", action = "http://localhost/Restaurant_Sale")
    @WebResult(name = "Restaurant_SaleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Restaurant_Sale", targetNamespace = "http://localhost", className = "com.easypay.api.RestaurantSale")
    @ResponseWrapper(localName = "Restaurant_SaleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.RestaurantSaleResponse")
    public String restaurantSale(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Tip", targetNamespace = "http://localhost")
        float tip,
        @WebParam(name = "Server", targetNamespace = "http://localhost")
        int server,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a restaurant AuthOnly to follow up with tip on closeout, used with card present or without.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param track1
     * @param state
     * @param track2
     * @param tip
     * @param city
     * @param amount
     * @param cardNo
     * @param refID
     * @param cvv
     * @param server
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Restaurant_AuthOnly", action = "http://localhost/Restaurant_AuthOnly")
    @WebResult(name = "Restaurant_AuthOnlyResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Restaurant_AuthOnly", targetNamespace = "http://localhost", className = "com.easypay.api.RestaurantAuthOnly")
    @ResponseWrapper(localName = "Restaurant_AuthOnlyResponse", targetNamespace = "http://localhost", className = "com.easypay.api.RestaurantAuthOnlyResponse")
    public String restaurantAuthOnly(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Tip", targetNamespace = "http://localhost")
        float tip,
        @WebParam(name = "Server", targetNamespace = "http://localhost")
        int server,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a closing out a previous AuthOnly to follow up with adding a tip on closeout
     * 
     * @param server
     * @param user
     * @param recNo
     * @param tip
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Restaurant_Closeout_AddTip", action = "http://localhost/Restaurant_Closeout_AddTip")
    @WebResult(name = "Restaurant_Closeout_AddTipResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Restaurant_Closeout_AddTip", targetNamespace = "http://localhost", className = "com.easypay.api.RestaurantCloseoutAddTip")
    @ResponseWrapper(localName = "Restaurant_Closeout_AddTipResponse", targetNamespace = "http://localhost", className = "com.easypay.api.RestaurantCloseoutAddTipResponse")
    public String restaurantCloseoutAddTip(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo,
        @WebParam(name = "Tip", targetNamespace = "http://localhost")
        float tip,
        @WebParam(name = "Server", targetNamespace = "http://localhost")
        int server,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a closing out a previous AuthOnly to follow up with modifying the amount and adding a tip on closeout
     * 
     * @param amount
     * @param server
     * @param user
     * @param recNo
     * @param tip
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Restaurant_Closeout_ModifyAmount_AddTip", action = "http://localhost/Restaurant_Closeout_ModifyAmount_AddTip")
    @WebResult(name = "Restaurant_Closeout_ModifyAmount_AddTipResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Restaurant_Closeout_ModifyAmount_AddTip", targetNamespace = "http://localhost", className = "com.easypay.api.RestaurantCloseoutModifyAmountAddTip")
    @ResponseWrapper(localName = "Restaurant_Closeout_ModifyAmount_AddTipResponse", targetNamespace = "http://localhost", className = "com.easypay.api.RestaurantCloseoutModifyAmountAddTipResponse")
    public String restaurantCloseoutModifyAmountAddTip(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Tip", targetNamespace = "http://localhost")
        float tip,
        @WebParam(name = "Server", targetNamespace = "http://localhost")
        int server,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a lodging immediate sale with or with card present. This transaction must include all lodging industry specific fields. Those not provided are assigned minimum value defaults. Master Card special rate, if provided is done in background.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param departureDate
     * @param street
     * @param extraChargeAmount
     * @param track1
     * @param state
     * @param track2
     * @param extraChargeCodes
     * @param saleCode
     * @param city
     * @param amount
     * @param cardNo
     * @param duration
     * @param folio
     * @param refID
     * @param customerData
     * @param cvv
     * @param arrivalDate
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Lodging_Sale", action = "http://localhost/Lodging_Sale")
    @WebResult(name = "Lodging_SaleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Lodging_Sale", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingSale")
    @ResponseWrapper(localName = "Lodging_SaleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingSaleResponse")
    public String lodgingSale(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Folio", targetNamespace = "http://localhost")
        String folio,
        @WebParam(name = "ArrivalDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar arrivalDate,
        @WebParam(name = "DepartureDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar departureDate,
        @WebParam(name = "Duration", targetNamespace = "http://localhost")
        int duration,
        @WebParam(name = "SaleCode", targetNamespace = "http://localhost")
        int saleCode,
        @WebParam(name = "ExtraChargeCodes", targetNamespace = "http://localhost")
        String extraChargeCodes,
        @WebParam(name = "ExtraChargeAmount", targetNamespace = "http://localhost")
        float extraChargeAmount,
        @WebParam(name = "CustomerData", targetNamespace = "http://localhost")
        String customerData,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a lodging checkin autorization with or with card present. This transaction must include all lodging industry specific fields. Those not provided are assigned minimum value defaults. Lodging checkin must be followed with a lodging checkout to close out the transaction.  Appended charges can be added during the stay and added to the authorization prior to closeout. For VISA appended charges add to the balance, for other cards an authonly is just done to verify balance and put a hold on to buy funds.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param departureDate
     * @param street
     * @param extraChargeAmount
     * @param track1
     * @param state
     * @param track2
     * @param extraChargeCodes
     * @param saleCode
     * @param city
     * @param amount
     * @param cardNo
     * @param duration
     * @param folio
     * @param refID
     * @param customerData
     * @param cvv
     * @param arrivalDate
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Lodging_Checkin", action = "http://localhost/Lodging_Checkin")
    @WebResult(name = "Lodging_CheckinResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Lodging_Checkin", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingCheckin")
    @ResponseWrapper(localName = "Lodging_CheckinResponse", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingCheckinResponse")
    public String lodgingCheckin(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Folio", targetNamespace = "http://localhost")
        String folio,
        @WebParam(name = "ArrivalDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar arrivalDate,
        @WebParam(name = "DepartureDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar departureDate,
        @WebParam(name = "Duration", targetNamespace = "http://localhost")
        int duration,
        @WebParam(name = "SaleCode", targetNamespace = "http://localhost")
        int saleCode,
        @WebParam(name = "ExtraChargeCodes", targetNamespace = "http://localhost")
        String extraChargeCodes,
        @WebParam(name = "ExtraChargeAmount", targetNamespace = "http://localhost")
        float extraChargeAmount,
        @WebParam(name = "CustomerData", targetNamespace = "http://localhost")
        String customerData,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a lodging append autorization which adds additional funds to the checkin authorization. This transaction must include all lodging industry specific fields. Those not provided are assigned minimum value defaults. Appended charges can be added during the stay and added to the authorization prior to closeout. For VISA appended charges add to the balance. For other cards an authonly is just done to verify available balance and put a hold-to-buy on funds.  recno for the Lodging_Append refers to the transaction recno of the original Lodging checkin transaction. The amount should be the amount increased, not the total amount.
     * 
     * @param amount
     * @param duration
     * @param departureDate
     * @param folio
     * @param extraChargeAmount
     * @param arrivalDate
     * @param user
     * @param recNo
     * @param extraChargeCodes
     * @param saleCode
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Lodging_Append", action = "http://localhost/Lodging_Append")
    @WebResult(name = "Lodging_AppendResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Lodging_Append", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingAppend")
    @ResponseWrapper(localName = "Lodging_AppendResponse", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingAppendResponse")
    public String lodgingAppend(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Folio", targetNamespace = "http://localhost")
        String folio,
        @WebParam(name = "ArrivalDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar arrivalDate,
        @WebParam(name = "DepartureDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar departureDate,
        @WebParam(name = "Duration", targetNamespace = "http://localhost")
        int duration,
        @WebParam(name = "SaleCode", targetNamespace = "http://localhost")
        int saleCode,
        @WebParam(name = "ExtraChargeCodes", targetNamespace = "http://localhost")
        String extraChargeCodes,
        @WebParam(name = "ExtraChargeAmount", targetNamespace = "http://localhost")
        float extraChargeAmount,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a lodging checkout. This transaction closes out a prior checking and appended charges.  For VISA if the final amount varies by more than 15% of the current authorized amount, an incremental or reversal transaction will be performed prior to the closeout.
     * 
     * @param amount
     * @param user
     * @param recNo
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Lodging_Checkout", action = "http://localhost/Lodging_Checkout")
    @WebResult(name = "Lodging_CheckoutResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Lodging_Checkout", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingCheckout")
    @ResponseWrapper(localName = "Lodging_CheckoutResponse", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingCheckoutResponse")
    public String lodgingCheckout(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a lodging checkout and adds additional funds to the checkin authorization. This transaction must include all lodging industry specific fields. Those not provided are assigned minimum value defaults. For VISA if the final amount varies by more than 15% of the current authorized amount, an incremental or reversal transaction will be performed prior to the closeout.
     * 
     * @param amount
     * @param duration
     * @param departureDate
     * @param folio
     * @param extraChargeAmount
     * @param arrivalDate
     * @param user
     * @param recNo
     * @param extraChargeCodes
     * @param saleCode
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Lodging_Checkout_AppendCharges", action = "http://localhost/Lodging_Checkout_AppendCharges")
    @WebResult(name = "Lodging_Checkout_AppendChargesResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Lodging_Checkout_AppendCharges", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingCheckoutAppendCharges")
    @ResponseWrapper(localName = "Lodging_Checkout_AppendChargesResponse", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingCheckoutAppendChargesResponse")
    public String lodgingCheckoutAppendCharges(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Folio", targetNamespace = "http://localhost")
        String folio,
        @WebParam(name = "ArrivalDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar arrivalDate,
        @WebParam(name = "DepartureDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar departureDate,
        @WebParam(name = "Duration", targetNamespace = "http://localhost")
        int duration,
        @WebParam(name = "SaleCode", targetNamespace = "http://localhost")
        int saleCode,
        @WebParam(name = "ExtraChargeCodes", targetNamespace = "http://localhost")
        String extraChargeCodes,
        @WebParam(name = "ExtraChargeAmount", targetNamespace = "http://localhost")
        float extraChargeAmount,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a lodging immediate sale using a consent on file. This transaction must include all lodging industry specific fields. Those not provided are assigned minimum value defaults. Master Card special rate, if provided is done in background. This assumes the consent on file is an ANNUAL consent.  The charge is made to the merchant account associated with the Consent on file.
     * 
     * @param consentID
     * @param departureDate
     * @param extraChargeAmount
     * @param extraChargeCodes
     * @param saleCode
     * @param amount
     * @param ovrd
     * @param duration
     * @param refID
     * @param folio
     * @param customerData
     * @param arrivalDate
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Lodging_SalebyConsent", action = "http://localhost/Lodging_SalebyConsent")
    @WebResult(name = "Lodging_SalebyConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Lodging_SalebyConsent", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingSalebyConsent")
    @ResponseWrapper(localName = "Lodging_SalebyConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingSalebyConsentResponse")
    public String lodgingSalebyConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "Ovrd", targetNamespace = "http://localhost")
        boolean ovrd,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Folio", targetNamespace = "http://localhost")
        String folio,
        @WebParam(name = "ArrivalDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar arrivalDate,
        @WebParam(name = "DepartureDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar departureDate,
        @WebParam(name = "Duration", targetNamespace = "http://localhost")
        int duration,
        @WebParam(name = "SaleCode", targetNamespace = "http://localhost")
        int saleCode,
        @WebParam(name = "ExtraChargeCodes", targetNamespace = "http://localhost")
        String extraChargeCodes,
        @WebParam(name = "ExtraChargeAmount", targetNamespace = "http://localhost")
        float extraChargeAmount,
        @WebParam(name = "CustomerData", targetNamespace = "http://localhost")
        String customerData,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for a lodging checkin autorization using an ANNUAL consent on file. This transaction must include all lodging industry specific fields. Those not provided are assigned minimum value defaults. Lodging checkin must be followed with a lodging checkout to close out the transaction.  Appended charges can be added during the stay and added to the authorization prior to closeout. Special MC Rates will be applied if account is setup accordingly. For VISA appended charges add to the balance, for other cards an authonly is just done to verify balance and put a hold on to buy funds. The merchant account associated with the Consent of file will be the account charged.
     * 
     * @param consentID
     * @param departureDate
     * @param extraChargeAmount
     * @param extraChargeCodes
     * @param saleCode
     * @param amount
     * @param ovrd
     * @param duration
     * @param refID
     * @param folio
     * @param customerData
     * @param arrivalDate
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Lodging_CheckinbyConsent", action = "http://localhost/Lodging_CheckinbyConsent")
    @WebResult(name = "Lodging_CheckinbyConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "Lodging_CheckinbyConsent", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingCheckinbyConsent")
    @ResponseWrapper(localName = "Lodging_CheckinbyConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.LodgingCheckinbyConsentResponse")
    public String lodgingCheckinbyConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "Ovrd", targetNamespace = "http://localhost")
        boolean ovrd,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "Folio", targetNamespace = "http://localhost")
        String folio,
        @WebParam(name = "ArrivalDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar arrivalDate,
        @WebParam(name = "DepartureDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar departureDate,
        @WebParam(name = "Duration", targetNamespace = "http://localhost")
        int duration,
        @WebParam(name = "SaleCode", targetNamespace = "http://localhost")
        int saleCode,
        @WebParam(name = "ExtraChargeCodes", targetNamespace = "http://localhost")
        String extraChargeCodes,
        @WebParam(name = "ExtraChargeAmount", targetNamespace = "http://localhost")
        float extraChargeAmount,
        @WebParam(name = "CustomerData", targetNamespace = "http://localhost")
        String customerData,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for ECommercial Sale.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param state
     * @param city
     * @param cardNo
     * @param amount
     * @param orderNo
     * @param cvv
     * @param firstName
     * @param user
     * @param passkey
     * @param merchID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EComm_Sale", action = "http://localhost/EComm_Sale")
    @WebResult(name = "EComm_SaleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EComm_Sale", targetNamespace = "http://localhost", className = "com.easypay.api.ECommSale")
    @ResponseWrapper(localName = "EComm_SaleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ECommSaleResponse")
    public String eCommSale(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "OrderNo", targetNamespace = "http://localhost")
        String orderNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for ECommercial Sale including Level II Data. LevelII fields include TaxInd (0=Tax not provided, 1=Tax included, 2=Non taxable), CustRefNo (Purchase Order or Order Number), SalesTax amount (0.00), Shipping zipcode.
     * 
     * @param custRefNo
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param state
     * @param city
     * @param shippingZip
     * @param cardNo
     * @param amount
     * @param orderNo
     * @param cvv
     * @param firstName
     * @param user
     * @param taxInd
     * @param merchID
     * @param salesTax
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EComm_Sale_LevelII", action = "http://localhost/EComm_Sale_LevelII")
    @WebResult(name = "EComm_Sale_LevelIIResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EComm_Sale_LevelII", targetNamespace = "http://localhost", className = "com.easypay.api.ECommSaleLevelII")
    @ResponseWrapper(localName = "EComm_Sale_LevelIIResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ECommSaleLevelIIResponse")
    public String eCommSaleLevelII(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "OrderNo", targetNamespace = "http://localhost")
        String orderNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "TaxInd", targetNamespace = "http://localhost")
        int taxInd,
        @WebParam(name = "CustRefNo", targetNamespace = "http://localhost")
        String custRefNo,
        @WebParam(name = "SalesTax", targetNamespace = "http://localhost")
        float salesTax,
        @WebParam(name = "ShippingZip", targetNamespace = "http://localhost")
        String shippingZip,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for ECommercial Order Authorization, to be followed up with a final completion closeout at shipment time to include the final amount.
     * 
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param state
     * @param city
     * @param cardNo
     * @param amount
     * @param orderNo
     * @param cvv
     * @param firstName
     * @param user
     * @param passkey
     * @param merchID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EComm_AuthorizeOrder", action = "http://localhost/EComm_AuthorizeOrder")
    @WebResult(name = "EComm_AuthorizeOrderResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EComm_AuthorizeOrder", targetNamespace = "http://localhost", className = "com.easypay.api.ECommAuthorizeOrder")
    @ResponseWrapper(localName = "EComm_AuthorizeOrderResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ECommAuthorizeOrderResponse")
    public String eCommAuthorizeOrder(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "OrderNo", targetNamespace = "http://localhost")
        String orderNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for ECommercial Order Authorization, to be followed up with a final completion closeout at shipment time to include the final amount. This Authorization includes LevelII fields include TaxInd (0=Tax not provided, 1=Tax included, 2=Non taxable), CustRefNo (Purchase Order or Order Number), SalesTax amount (0.00), Shipping zipcode.
     * 
     * @param custRefNo
     * @param lastName
     * @param zip
     * @param expirationDate
     * @param street
     * @param state
     * @param city
     * @param shippingZip
     * @param cardNo
     * @param amount
     * @param orderNo
     * @param cvv
     * @param firstName
     * @param user
     * @param taxInd
     * @param merchID
     * @param salesTax
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EComm_AuthorizeOrder_LevelII", action = "http://localhost/EComm_AuthorizeOrder_LevelII")
    @WebResult(name = "EComm_AuthorizeOrder_LevelIIResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EComm_AuthorizeOrder_LevelII", targetNamespace = "http://localhost", className = "com.easypay.api.ECommAuthorizeOrderLevelII")
    @ResponseWrapper(localName = "EComm_AuthorizeOrder_LevelIIResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ECommAuthorizeOrderLevelIIResponse")
    public String eCommAuthorizeOrderLevelII(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "OrderNo", targetNamespace = "http://localhost")
        String orderNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "TaxInd", targetNamespace = "http://localhost")
        int taxInd,
        @WebParam(name = "CustRefNo", targetNamespace = "http://localhost")
        String custRefNo,
        @WebParam(name = "SalesTax", targetNamespace = "http://localhost")
        float salesTax,
        @WebParam(name = "ShippingZip", targetNamespace = "http://localhost")
        String shippingZip,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for ECommercial Order Completion.  This request refers to previous AuthorizationOrder and includes the final amount of items shipped/delivered.  If a VISA card is used, the required reversal will be performed if the final amount differs from the original authorized amount. If the final amount is greater than the initial authorization, the initial amount is reversed to $0 and a Sale for the actual amount is processed.  Note the sale being a larger amount could be subject to decline.
     * 
     * @param amount
     * @param user
     * @param recNo
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EComm_CompleteOrder", action = "http://localhost/EComm_CompleteOrder")
    @WebResult(name = "EComm_CompleteOrderResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EComm_CompleteOrder", targetNamespace = "http://localhost", className = "com.easypay.api.ECommCompleteOrder")
    @ResponseWrapper(localName = "EComm_CompleteOrderResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ECommCompleteOrderResponse")
    public String eCommCompleteOrder(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for DirectMarketing Sale.  Values for the Type Indicator are S = Single Purchase Transacation, R = Recurring Payment, I = Installment Payment, U = Unclassified Transaction (Default)
     * 
     * @param lastName
     * @param zip
     * @param typeIndicator
     * @param expirationDate
     * @param street
     * @param state
     * @param city
     * @param cardNo
     * @param amount
     * @param orderNo
     * @param cvv
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "DirectMarketing_Sale", action = "http://localhost/DirectMarketing_Sale")
    @WebResult(name = "DirectMarketing_SaleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "DirectMarketing_Sale", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingSale")
    @ResponseWrapper(localName = "DirectMarketing_SaleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingSaleResponse")
    public String directMarketingSale(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "OrderNo", targetNamespace = "http://localhost")
        String orderNo,
        @WebParam(name = "TypeIndicator", targetNamespace = "http://localhost")
        String typeIndicator,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for DirectMarketing Sale. LevelII fields include TaxInd (0=Tax not provided, 1=Tax included, 2=Non taxable), CustRefNo (Purchase Order or Order Number), SalesTax amount (0.00), Shipping zipcode. Values for the Type Indicator are S = Single Purchase Transacation, R = Recurring Payment, I = Installment Payment, U = Unclassified Transaction (Default)
     * 
     * @param custRefNo
     * @param lastName
     * @param zip
     * @param typeIndicator
     * @param expirationDate
     * @param street
     * @param state
     * @param city
     * @param shippingZip
     * @param cardNo
     * @param amount
     * @param orderNo
     * @param cvv
     * @param firstName
     * @param user
     * @param taxInd
     * @param merchID
     * @param salesTax
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "DirectMarketing_Sale_LevelII", action = "http://localhost/DirectMarketing_Sale_LevelII")
    @WebResult(name = "DirectMarketing_Sale_LevelIIResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "DirectMarketing_Sale_LevelII", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingSaleLevelII")
    @ResponseWrapper(localName = "DirectMarketing_Sale_LevelIIResponse", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingSaleLevelIIResponse")
    public String directMarketingSaleLevelII(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "OrderNo", targetNamespace = "http://localhost")
        String orderNo,
        @WebParam(name = "TypeIndicator", targetNamespace = "http://localhost")
        String typeIndicator,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "TaxInd", targetNamespace = "http://localhost")
        int taxInd,
        @WebParam(name = "CustRefNo", targetNamespace = "http://localhost")
        String custRefNo,
        @WebParam(name = "SalesTax", targetNamespace = "http://localhost")
        float salesTax,
        @WebParam(name = "ShippingZip", targetNamespace = "http://localhost")
        String shippingZip,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for DirectMarketing Sale.  Values for the Type Indicator are S = Single Purchase Transacation, R = Recurring Payment, I = Installment Payment, U = Unclassified Transaction (Default)
     * 
     * @param lastName
     * @param zip
     * @param typeIndicator
     * @param expirationDate
     * @param street
     * @param state
     * @param city
     * @param cardNo
     * @param amount
     * @param orderNo
     * @param cvv
     * @param firstName
     * @param user
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "DirectMarketing_AuthorizeOrder", action = "http://localhost/DirectMarketing_AuthorizeOrder")
    @WebResult(name = "DirectMarketing_AuthorizeOrderResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "DirectMarketing_AuthorizeOrder", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingAuthorizeOrder")
    @ResponseWrapper(localName = "DirectMarketing_AuthorizeOrderResponse", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingAuthorizeOrderResponse")
    public String directMarketingAuthorizeOrder(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "OrderNo", targetNamespace = "http://localhost")
        String orderNo,
        @WebParam(name = "TypeIndicator", targetNamespace = "http://localhost")
        String typeIndicator,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for DirectMarketing Sale. LevelII fields include TaxInd (0=Tax not provided, 1=Tax included, 2=Non taxable), CustRefNo (Purchase Order or Order Number), SalesTax amount (0.00), Shipping zipcode. Values for the Type Indicator are S = Single Purchase Transacation, R = Recurring Payment, I = Installment Payment, U = Unclassified Transaction (Default)
     * 
     * @param custRefNo
     * @param lastName
     * @param zip
     * @param typeIndicator
     * @param expirationDate
     * @param street
     * @param state
     * @param city
     * @param shippingZip
     * @param cardNo
     * @param amount
     * @param orderNo
     * @param cvv
     * @param firstName
     * @param user
     * @param taxInd
     * @param merchID
     * @param salesTax
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "DirectMarketing_AuthorizeOrder_LevelII", action = "http://localhost/DirectMarketing_AuthorizeOrder_LevelII")
    @WebResult(name = "DirectMarketing_AuthorizeOrder_LevelIIResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "DirectMarketing_AuthorizeOrder_LevelII", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingAuthorizeOrderLevelII")
    @ResponseWrapper(localName = "DirectMarketing_AuthorizeOrder_LevelIIResponse", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingAuthorizeOrderLevelIIResponse")
    public String directMarketingAuthorizeOrderLevelII(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "CVV", targetNamespace = "http://localhost")
        String cvv,
        @WebParam(name = "Street", targetNamespace = "http://localhost")
        String street,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "OrderNo", targetNamespace = "http://localhost")
        String orderNo,
        @WebParam(name = "TypeIndicator", targetNamespace = "http://localhost")
        String typeIndicator,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "TaxInd", targetNamespace = "http://localhost")
        int taxInd,
        @WebParam(name = "CustRefNo", targetNamespace = "http://localhost")
        String custRefNo,
        @WebParam(name = "SalesTax", targetNamespace = "http://localhost")
        float salesTax,
        @WebParam(name = "ShippingZip", targetNamespace = "http://localhost")
        String shippingZip,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for Direct Marketing Order Completion.  This request refers to previous AuthorizationOrder and includes the final amount of items shipped/delivered.  If a VISA card is used, the required reversal will be performed if the final amount differs from the original authorized amount. If the final amount is greater than the initial authorization, the initial amount is reversed to $0 and a Sale for the actual amount is processed.  Note the sale being a larger amount could be subject to decline.
     * 
     * @param amount
     * @param user
     * @param recNo
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "DirectMarketing_CompleteOrder", action = "http://localhost/DirectMarketing_CompleteOrder")
    @WebResult(name = "DirectMarketing_CompleteOrderResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "DirectMarketing_CompleteOrder", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingCompleteOrder")
    @ResponseWrapper(localName = "DirectMarketing_CompleteOrderResponse", targetNamespace = "http://localhost", className = "com.easypay.api.DirectMarketingCompleteOrderResponse")
    public String directMarketingCompleteOrder(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "RecNo", targetNamespace = "http://localhost")
        int recNo,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * (Change*) Service method for authorizing a PinDebit Card Sale. Modified to include service description field.
     * 
     * @param lastName
     * @param expirationDate
     * @param track1
     * @param track2
     * @param serviceDescription
     * @param cardNo
     * @param amount
     * @param refID
     * @param cashBack
     * @param firstName
     * @param user
     * @param ksn
     * @param pinBlock
     * @param passkey
     * @param merchID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "PinDebit_Sale", action = "http://localhost/PinDebit_Sale")
    @WebResult(name = "PinDebit_SaleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "PinDebit_Sale", targetNamespace = "http://localhost", className = "com.easypay.api.PinDebitSale")
    @ResponseWrapper(localName = "PinDebit_SaleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.PinDebitSaleResponse")
    public String pinDebitSale(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpirationDate", targetNamespace = "http://localhost")
        String expirationDate,
        @WebParam(name = "Track1", targetNamespace = "http://localhost")
        String track1,
        @WebParam(name = "Track2", targetNamespace = "http://localhost")
        String track2,
        @WebParam(name = "RefID", targetNamespace = "http://localhost")
        String refID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "CashBack", targetNamespace = "http://localhost")
        float cashBack,
        @WebParam(name = "KSN", targetNamespace = "http://localhost")
        String ksn,
        @WebParam(name = "PinBlock", targetNamespace = "http://localhost")
        String pinBlock,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID,
        @WebParam(name = "ServiceDescription", targetNamespace = "http://localhost")
        String serviceDescription,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for setting auto settlement.
     * 
     * @param minute
     * @param hour
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_TurnOn_AutoSettlement", action = "http://localhost/AcctSetup_TurnOn_AutoSettlement")
    @WebResult(name = "AcctSetup_TurnOn_AutoSettlementResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_TurnOn_AutoSettlement", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOnAutoSettlement")
    @ResponseWrapper(localName = "AcctSetup_TurnOn_AutoSettlementResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOnAutoSettlementResponse")
    public String acctSetupTurnOnAutoSettlement(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "Hour", targetNamespace = "http://localhost")
        int hour,
        @WebParam(name = "Minute", targetNamespace = "http://localhost")
        int minute);

    /**
     * Service method for Auto achedule payment processing before settlement.
     * 
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_TurnOnAuto_Schedule", action = "http://localhost/AcctSetup_TurnOnAuto_Schedule")
    @WebResult(name = "AcctSetup_TurnOnAuto_ScheduleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_TurnOnAuto_Schedule", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOnAutoSchedule")
    @ResponseWrapper(localName = "AcctSetup_TurnOnAuto_ScheduleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOnAutoScheduleResponse")
    public String acctSetupTurnOnAutoSchedule(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for turning off auto settlement.
     * 
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_TurnOffAuto_Settlement", action = "http://localhost/AcctSetup_TurnOffAuto_Settlement")
    @WebResult(name = "AcctSetup_TurnOffAuto_SettlementResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_TurnOffAuto_Settlement", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOffAutoSettlement")
    @ResponseWrapper(localName = "AcctSetup_TurnOffAuto_SettlementResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOffAutoSettlementResponse")
    public String acctSetupTurnOffAutoSettlement(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for turning off auto schedule payment processing before settlement.
     * 
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_TurnOff_AutoSchedule", action = "http://localhost/AcctSetup_TurnOff_AutoSchedule")
    @WebResult(name = "AcctSetup_TurnOff_AutoScheduleResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_TurnOff_AutoSchedule", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOffAutoSchedule")
    @ResponseWrapper(localName = "AcctSetup_TurnOff_AutoScheduleResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOffAutoScheduleResponse")
    public String acctSetupTurnOffAutoSchedule(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for setting account email to receive automated reports.
     * 
     * @param email
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_SetEmailAddress", action = "http://localhost/AcctSetup_SetEmailAddress")
    @WebResult(name = "AcctSetup_SetEmailAddressResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_SetEmailAddress", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupSetEmailAddress")
    @ResponseWrapper(localName = "AcctSetup_SetEmailAddressResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupSetEmailAddressResponse")
    public String acctSetupSetEmailAddress(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email);

    /**
     * Service method for turning on Batch Summary Report to be send to Email. Note: Email address must be set using AcctSetup_SetEmailAddress.
     * 
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_TurnOnBatchSummaryReport", action = "http://localhost/AcctSetup_TurnOnBatchSummaryReport")
    @WebResult(name = "AcctSetup_TurnOnBatchSummaryReportResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_TurnOnBatchSummaryReport", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOnBatchSummaryReport")
    @ResponseWrapper(localName = "AcctSetup_TurnOnBatchSummaryReportResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOnBatchSummaryReportResponse")
    public String acctSetupTurnOnBatchSummaryReport(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for turning off Batch Summary report sent to Email.
     * 
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_TurnOffBatchSummaryReport", action = "http://localhost/AcctSetup_TurnOffBatchSummaryReport")
    @WebResult(name = "AcctSetup_TurnOffBatchSummaryReportResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_TurnOffBatchSummaryReport", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOffBatchSummaryReport")
    @ResponseWrapper(localName = "AcctSetup_TurnOffBatchSummaryReportResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOffBatchSummaryReportResponse")
    public String acctSetupTurnOffBatchSummaryReport(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for turning on Transaction Detail Summary Report to be send to Email. Note: Email address must be set using AcctSetup_SetEmailAddress.
     * 
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_TurnOnTransactionSummaryReport", action = "http://localhost/AcctSetup_TurnOnTransactionSummaryReport")
    @WebResult(name = "AcctSetup_TurnOnTransactionSummaryReportResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_TurnOnTransactionSummaryReport", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOnTransactionSummaryReport")
    @ResponseWrapper(localName = "AcctSetup_TurnOnTransactionSummaryReportResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOnTransactionSummaryReportResponse")
    public String acctSetupTurnOnTransactionSummaryReport(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for turning off Transaction Detail Summary report sent to Email.
     * 
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_TurnOffTransactionSummaryReport", action = "http://localhost/AcctSetup_TurnOffTransactionSummaryReport")
    @WebResult(name = "AcctSetup_TurnOffTransactionSummaryReportResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_TurnOffTransactionSummaryReport", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOffTransactionSummaryReport")
    @ResponseWrapper(localName = "AcctSetup_TurnOffTransactionSummaryReportResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupTurnOffTransactionSummaryReportResponse")
    public String acctSetupTurnOffTransactionSummaryReport(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for for requesting a Batch Summary Report.  If BatchNo is Zero, you get the last batch processed, else you get the batch specified.  If Email is provided, report will be sent to that email, else to the account Email address previously set. If MerchRec is zero all merchant accounts will be provided.
     * 
     * @param batchNo
     * @param email
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_RequestBatchSummaryReport", action = "http://localhost/AcctSetup_RequestBatchSummaryReport")
    @WebResult(name = "AcctSetup_RequestBatchSummaryReportResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_RequestBatchSummaryReport", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupRequestBatchSummaryReport")
    @ResponseWrapper(localName = "AcctSetup_RequestBatchSummaryReportResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupRequestBatchSummaryReportResponse")
    public String acctSetupRequestBatchSummaryReport(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "BatchNo", targetNamespace = "http://localhost")
        int batchNo,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID);

    /**
     * Service method for for requesting a Transaction Detail Summary Report.  If BatchNo is Zero, you get the last batch processed, else you get the batch specified.  If Email is provided, report will be sent to that email, else to the account Email address previously set. If MerchRec is zero, all merchant accounts will be provided
     * 
     * @param batchNo
     * @param email
     * @param merchID
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AcctSetup_RequestTransactionSummaryReport", action = "http://localhost/AcctSetup_RequestTransactionSummaryReport")
    @WebResult(name = "AcctSetup_RequestTransactionSummaryReportResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_RequestTransactionSummaryReport", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupRequestTransactionSummaryReport")
    @ResponseWrapper(localName = "AcctSetup_RequestTransactionSummaryReportResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupRequestTransactionSummaryReportResponse")
    public String acctSetupRequestTransactionSummaryReport(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "BatchNo", targetNamespace = "http://localhost")
        int batchNo,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchID", targetNamespace = "http://localhost")
        int merchID);

    /**
     * Service method for retreiving Account setup parameters.
     * 
     * @param passkey
     * @return
     *     returns com.easypay.api.AcctSetup
     */
    @WebMethod(operationName = "AcctSetup_getAcctSetup", action = "http://localhost/AcctSetup_getAcctSetup")
    @WebResult(name = "AcctSetup_getAcctSetupResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "AcctSetup_getAcctSetup", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupGetAcctSetup")
    @ResponseWrapper(localName = "AcctSetup_getAcctSetupResponse", targetNamespace = "http://localhost", className = "com.easypay.api.AcctSetupGetAcctSetupResponse")
    public AcctSetup acctSetupGetAcctSetup(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey);

    /**
     * Service method for creating an ACH Annual Consent
     * 
     * @param aba
     * @param zip
     * @param lastName
     * @param startDate
     * @param acctNo
     * @param acctType
     * @param state
     * @param maxAmount
     * @param endDate
     * @param referenceID
     * @param city
     * @param merchRec
     * @param email
     * @param address
     * @param service
     * @param firstName
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_CreateAnnualConsent", action = "http://localhost/ACH_CreateAnnualConsent")
    @WebResult(name = "ACH_CreateAnnualConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_CreateAnnualConsent", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateAnnualConsent")
    @ResponseWrapper(localName = "ACH_CreateAnnualConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateAnnualConsentResponse")
    public String achCreateAnnualConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "AcctType", targetNamespace = "http://localhost")
        String acctType,
        @WebParam(name = "AcctNo", targetNamespace = "http://localhost")
        String acctNo,
        @WebParam(name = "ABA", targetNamespace = "http://localhost")
        String aba,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "EndDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar endDate,
        @WebParam(name = "MaxAmount", targetNamespace = "http://localhost")
        float maxAmount,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating an ACH OneTime Consent
     * 
     * @param aba
     * @param zip
     * @param lastName
     * @param startDate
     * @param acctNo
     * @param acctType
     * @param state
     * @param maxAmount
     * @param endDate
     * @param referenceID
     * @param city
     * @param merchRec
     * @param email
     * @param address
     * @param service
     * @param firstName
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_CreateOneTimeConsent", action = "http://localhost/ACH_CreateOneTimeConsent")
    @WebResult(name = "ACH_CreateOneTimeConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_CreateOneTimeConsent", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateOneTimeConsent")
    @ResponseWrapper(localName = "ACH_CreateOneTimeConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateOneTimeConsentResponse")
    public String achCreateOneTimeConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "AcctType", targetNamespace = "http://localhost")
        String acctType,
        @WebParam(name = "AcctNo", targetNamespace = "http://localhost")
        String acctNo,
        @WebParam(name = "ABA", targetNamespace = "http://localhost")
        String aba,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "EndDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar endDate,
        @WebParam(name = "MaxAmount", targetNamespace = "http://localhost")
        float maxAmount,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating an ACH Recurring consent based payment amount.
     * 
     * @param aba
     * @param zip
     * @param lastName
     * @param startDate
     * @param acctNo
     * @param acctType
     * @param state
     * @param period
     * @param referenceID
     * @param city
     * @param paymentAmount
     * @param merchRec
     * @param email
     * @param address
     * @param totalAmount
     * @param service
     * @param firstName
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_CreateRecurringConsentByPmtAmount", action = "http://localhost/ACH_CreateRecurringConsentByPmtAmount")
    @WebResult(name = "ACH_CreateRecurringConsentByPmtAmountResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_CreateRecurringConsentByPmtAmount", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateRecurringConsentByPmtAmount")
    @ResponseWrapper(localName = "ACH_CreateRecurringConsentByPmtAmountResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateRecurringConsentByPmtAmountResponse")
    public String achCreateRecurringConsentByPmtAmount(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "AcctType", targetNamespace = "http://localhost")
        String acctType,
        @WebParam(name = "AcctNo", targetNamespace = "http://localhost")
        String acctNo,
        @WebParam(name = "ABA", targetNamespace = "http://localhost")
        String aba,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "TotalAmount", targetNamespace = "http://localhost")
        float totalAmount,
        @WebParam(name = "PaymentAmount", targetNamespace = "http://localhost")
        float paymentAmount,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating an ACH Recurring consent based number of payments.
     * 
     * @param lastPayment
     * @param aba
     * @param zip
     * @param lastName
     * @param startDate
     * @param acctNo
     * @param acctType
     * @param state
     * @param period
     * @param referenceID
     * @param city
     * @param merchRec
     * @param email
     * @param address
     * @param totalAmount
     * @param service
     * @param firstName
     * @param user
     * @param noPayments
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_CreateRecurringConsentByNoPayments", action = "http://localhost/ACH_CreateRecurringConsentByNoPayments")
    @WebResult(name = "ACH_CreateRecurringConsentByNoPaymentsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_CreateRecurringConsentByNoPayments", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateRecurringConsentByNoPayments")
    @ResponseWrapper(localName = "ACH_CreateRecurringConsentByNoPaymentsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateRecurringConsentByNoPaymentsResponse")
    public String achCreateRecurringConsentByNoPayments(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "AcctType", targetNamespace = "http://localhost")
        String acctType,
        @WebParam(name = "AcctNo", targetNamespace = "http://localhost")
        String acctNo,
        @WebParam(name = "ABA", targetNamespace = "http://localhost")
        String aba,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "TotalAmount", targetNamespace = "http://localhost")
        float totalAmount,
        @WebParam(name = "NoPayments", targetNamespace = "http://localhost")
        int noPayments,
        @WebParam(name = "LastPayment", targetNamespace = "http://localhost")
        float lastPayment,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating an ACH variable recurring consent based payment amount.
     * 
     * @param aba
     * @param zip
     * @param lastName
     * @param startDate
     * @param acctNo
     * @param acctType
     * @param state
     * @param period
     * @param referenceID
     * @param city
     * @param merchRec
     * @param email
     * @param address
     * @param totalAmount
     * @param service
     * @param firstName
     * @param user
     * @param noPayments
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_CreateVariableConsent", action = "http://localhost/ACH_CreateVariableConsent")
    @WebResult(name = "ACH_CreateVariableConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_CreateVariableConsent", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateVariableConsent")
    @ResponseWrapper(localName = "ACH_CreateVariableConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateVariableConsentResponse")
    public String achCreateVariableConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "AcctType", targetNamespace = "http://localhost")
        String acctType,
        @WebParam(name = "AcctNo", targetNamespace = "http://localhost")
        String acctNo,
        @WebParam(name = "ABA", targetNamespace = "http://localhost")
        String aba,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "TotalAmount", targetNamespace = "http://localhost")
        float totalAmount,
        @WebParam(name = "NoPayments", targetNamespace = "http://localhost")
        float noPayments,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating an ACH Subscription consent.
     * 
     * @param aba
     * @param zip
     * @param lastName
     * @param startDate
     * @param acctNo
     * @param acctType
     * @param state
     * @param period
     * @param referenceID
     * @param city
     * @param paymentAmount
     * @param merchRec
     * @param email
     * @param address
     * @param service
     * @param firstName
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ACH_CreateSubscriptionConsent", action = "http://localhost/ACH_CreateSubscriptionConsent")
    @WebResult(name = "ACH_CreateSubscriptionConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "ACH_CreateSubscriptionConsent", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateSubscriptionConsent")
    @ResponseWrapper(localName = "ACH_CreateSubscriptionConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.ACHCreateSubscriptionConsentResponse")
    public String achCreateSubscriptionConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "AcctType", targetNamespace = "http://localhost")
        String acctType,
        @WebParam(name = "AcctNo", targetNamespace = "http://localhost")
        String acctNo,
        @WebParam(name = "ABA", targetNamespace = "http://localhost")
        String aba,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "Zip", targetNamespace = "http://localhost")
        String zip,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "PaymentAmount", targetNamespace = "http://localhost")
        float paymentAmount,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating an Annual Consent. Note that you no longer load CardInfo, you just pass in all parameters. No_Days has been eliminated
     * 
     * @param lastName
     * @param startDate
     * @param state
     * @param maxAmount
     * @param endDate
     * @param expDate
     * @param referenceID
     * @param custLastName
     * @param city
     * @param cardNo
     * @param custFirstName
     * @param merchRec
     * @param email
     * @param address
     * @param zipCode
     * @param service
     * @param firstName
     * @param user
     * @param passkey
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EasyPay_CreateAnnualConsent", action = "http://localhost/EasyPay_CreateAnnualConsent")
    @WebResult(name = "EasyPay_CreateAnnualConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_CreateAnnualConsent", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateAnnualConsent")
    @ResponseWrapper(localName = "EasyPay_CreateAnnualConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateAnnualConsentResponse")
    public int easyPayCreateAnnualConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpDate", targetNamespace = "http://localhost")
        String expDate,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "ZipCode", targetNamespace = "http://localhost")
        String zipCode,
        @WebParam(name = "CustFirstName", targetNamespace = "http://localhost")
        String custFirstName,
        @WebParam(name = "CustLastName", targetNamespace = "http://localhost")
        String custLastName,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "EndDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar endDate,
        @WebParam(name = "Max_Amount", targetNamespace = "http://localhost")
        float maxAmount,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating an OneTime Consent. Note that you no longer load CardInfo, you just pass in all the parameters.
     * 
     * @param lastName
     * @param startDate
     * @param state
     * @param maxAmount
     * @param endDate
     * @param expDate
     * @param referenceID
     * @param custLastName
     * @param city
     * @param cardNo
     * @param custFirstName
     * @param merchRec
     * @param email
     * @param address
     * @param zipCode
     * @param service
     * @param firstName
     * @param user
     * @param passkey
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EasyPay_CreateOneTimeConsent", action = "http://localhost/EasyPay_CreateOneTimeConsent")
    @WebResult(name = "EasyPay_CreateOneTimeConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_CreateOneTimeConsent", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateOneTimeConsent")
    @ResponseWrapper(localName = "EasyPay_CreateOneTimeConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateOneTimeConsentResponse")
    public int easyPayCreateOneTimeConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpDate", targetNamespace = "http://localhost")
        String expDate,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "ZipCode", targetNamespace = "http://localhost")
        String zipCode,
        @WebParam(name = "CustFirstName", targetNamespace = "http://localhost")
        String custFirstName,
        @WebParam(name = "CustLastName", targetNamespace = "http://localhost")
        String custLastName,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "EndDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar endDate,
        @WebParam(name = "Max_Amount", targetNamespace = "http://localhost")
        float maxAmount,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating a Recurring Consent knowing the period and specifying the payment amount. Number of payments is computed as well as the last payment. Note that you no longer load CardInfo, you just pass in all the parameters.
     * 
     * @param lastName
     * @param startDate
     * @param state
     * @param endDate
     * @param expDate
     * @param period
     * @param referenceID
     * @param custLastName
     * @param city
     * @param cardNo
     * @param paymentAmount
     * @param custFirstName
     * @param merchRec
     * @param email
     * @param ttlAmount
     * @param address
     * @param zipCode
     * @param service
     * @param firstName
     * @param user
     * @param passkey
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EasyPay_CreateRecurringConsentByPaymentAmount", action = "http://localhost/EasyPay_CreateRecurringConsentByPaymentAmount")
    @WebResult(name = "EasyPay_CreateRecurringConsentByPaymentAmountResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_CreateRecurringConsentByPaymentAmount", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateRecurringConsentByPaymentAmount")
    @ResponseWrapper(localName = "EasyPay_CreateRecurringConsentByPaymentAmountResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateRecurringConsentByPaymentAmountResponse")
    public int easyPayCreateRecurringConsentByPaymentAmount(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpDate", targetNamespace = "http://localhost")
        String expDate,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "ZipCode", targetNamespace = "http://localhost")
        String zipCode,
        @WebParam(name = "CustFirstName", targetNamespace = "http://localhost")
        String custFirstName,
        @WebParam(name = "CustLastName", targetNamespace = "http://localhost")
        String custLastName,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "EndDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar endDate,
        @WebParam(name = "TTL_Amount", targetNamespace = "http://localhost")
        float ttlAmount,
        @WebParam(name = "Payment_Amount", targetNamespace = "http://localhost")
        float paymentAmount,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating a Recurring Consent knowing the Period and number of payments to be made. Payment amounts are computed.  Note that you no longer load CardInfo, you just pass in all the parameters.
     * 
     * @param lastPayment
     * @param lastName
     * @param startDate
     * @param state
     * @param endDate
     * @param expDate
     * @param period
     * @param referenceID
     * @param custLastName
     * @param city
     * @param cardNo
     * @param custFirstName
     * @param merchRec
     * @param email
     * @param ttlAmount
     * @param address
     * @param zipCode
     * @param service
     * @param firstName
     * @param user
     * @param noPayments
     * @param passkey
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EasyPay_CreateRecurringConsentByNoPayments", action = "http://localhost/EasyPay_CreateRecurringConsentByNoPayments")
    @WebResult(name = "EasyPay_CreateRecurringConsentByNoPaymentsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_CreateRecurringConsentByNoPayments", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateRecurringConsentByNoPayments")
    @ResponseWrapper(localName = "EasyPay_CreateRecurringConsentByNoPaymentsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateRecurringConsentByNoPaymentsResponse")
    public int easyPayCreateRecurringConsentByNoPayments(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpDate", targetNamespace = "http://localhost")
        String expDate,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "ZipCode", targetNamespace = "http://localhost")
        String zipCode,
        @WebParam(name = "CustFirstName", targetNamespace = "http://localhost")
        String custFirstName,
        @WebParam(name = "CustLastName", targetNamespace = "http://localhost")
        String custLastName,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "EndDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar endDate,
        @WebParam(name = "TTL_Amount", targetNamespace = "http://localhost")
        float ttlAmount,
        @WebParam(name = "No_Payments", targetNamespace = "http://localhost")
        int noPayments,
        @WebParam(name = "Last_Payment", targetNamespace = "http://localhost")
        float lastPayment,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for creating a Variable Consent. Note that you no longer load CardInfo, you just pass in all the parameters.
     * 
     * @param lastName
     * @param startDate
     * @param state
     * @param endDate
     * @param expDate
     * @param period
     * @param referenceID
     * @param custLastName
     * @param city
     * @param cardNo
     * @param custFirstName
     * @param merchRec
     * @param email
     * @param ttlAmount
     * @param address
     * @param zipCode
     * @param service
     * @param firstName
     * @param user
     * @param noPayments
     * @param passkey
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EasyPay_CreateVariableConsentByNoPayments", action = "http://localhost/EasyPay_CreateVariableConsentByNoPayments")
    @WebResult(name = "EasyPay_CreateVariableConsentByNoPaymentsResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_CreateVariableConsentByNoPayments", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateVariableConsentByNoPayments")
    @ResponseWrapper(localName = "EasyPay_CreateVariableConsentByNoPaymentsResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayCreateVariableConsentByNoPaymentsResponse")
    public int easyPayCreateVariableConsentByNoPayments(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "CardNo", targetNamespace = "http://localhost")
        String cardNo,
        @WebParam(name = "ExpDate", targetNamespace = "http://localhost")
        String expDate,
        @WebParam(name = "FirstName", targetNamespace = "http://localhost")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "http://localhost")
        String lastName,
        @WebParam(name = "Address", targetNamespace = "http://localhost")
        String address,
        @WebParam(name = "City", targetNamespace = "http://localhost")
        String city,
        @WebParam(name = "State", targetNamespace = "http://localhost")
        String state,
        @WebParam(name = "ZipCode", targetNamespace = "http://localhost")
        String zipCode,
        @WebParam(name = "CustFirstName", targetNamespace = "http://localhost")
        String custFirstName,
        @WebParam(name = "CustLastName", targetNamespace = "http://localhost")
        String custLastName,
        @WebParam(name = "ReferenceID", targetNamespace = "http://localhost")
        String referenceID,
        @WebParam(name = "StartDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar startDate,
        @WebParam(name = "EndDate", targetNamespace = "http://localhost")
        XMLGregorianCalendar endDate,
        @WebParam(name = "TTL_Amount", targetNamespace = "http://localhost")
        float ttlAmount,
        @WebParam(name = "No_Payments", targetNamespace = "http://localhost")
        int noPayments,
        @WebParam(name = "Period", targetNamespace = "http://localhost")
        String period,
        @WebParam(name = "Email", targetNamespace = "http://localhost")
        String email,
        @WebParam(name = "Service", targetNamespace = "http://localhost")
        String service,
        @WebParam(name = "MerchRec", targetNamespace = "http://localhost")
        int merchRec,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user);

    /**
     * Service method for processing an Annual or OneTime Consent allowing override of max amount
     * 
     * @param amount
     * @param ovrd
     * @param consentID
     * @param user
     * @param passkey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EasyPay_ProcessConsent", action = "http://localhost/EasyPay_ProcessConsent")
    @WebResult(name = "EasyPay_ProcessConsentResult", targetNamespace = "http://localhost")
    @RequestWrapper(localName = "EasyPay_ProcessConsent", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayProcessConsent")
    @ResponseWrapper(localName = "EasyPay_ProcessConsentResponse", targetNamespace = "http://localhost", className = "com.easypay.api.EasyPayProcessConsentResponse")
    public String easyPayProcessConsent(
        @WebParam(name = "passkey", targetNamespace = "http://localhost")
        String passkey,
        @WebParam(name = "ConsentID", targetNamespace = "http://localhost")
        int consentID,
        @WebParam(name = "Amount", targetNamespace = "http://localhost")
        float amount,
        @WebParam(name = "User", targetNamespace = "http://localhost")
        String user,
        @WebParam(name = "ovrd", targetNamespace = "http://localhost")
        boolean ovrd);

}
