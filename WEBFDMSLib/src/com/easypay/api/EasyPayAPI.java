
package com.easypay.api;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * EasyPayAPI Release 15 Adds LineItem features.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "EasyPayAPI", targetNamespace = "http://localhost", wsdlLocation = "file:/D:/project/AldorSolutions/source/FDMS%20v3.1/WEBFDMSLib/src/testR15.3gc-processing.com.WSDL")
public class EasyPayAPI
    extends Service
{

    private final static URL EASYPAYAPI_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.easypay.api.EasyPayAPI.class.getName());

    static {
        URL url = null;
        File file = new File("D:/project/AldorSolutions/source/FDMS v3.1/WEBFDMSLib/src/testR15.3gc-processing.com.WSDL");
        String fileurl = "";
        try {
            URL baseUrl;
            baseUrl = com.easypay.api.EasyPayAPI.class.getResource(".");
            fileurl = file.toURL().toString();
            url = new URL(baseUrl, fileurl);
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '" + fileurl + "', retrying as a local file");
            logger.warning(e.getMessage());
        }
        EASYPAYAPI_WSDL_LOCATION = url;
    }

    public EasyPayAPI(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EasyPayAPI() {
        super(EASYPAYAPI_WSDL_LOCATION, new QName("http://localhost", "EasyPayAPI"));
    }

    /**
     * 
     * @return
     *     returns EasyPayAPISoap
     */
    @WebEndpoint(name = "EasyPayAPISoap")
    public EasyPayAPISoap getEasyPayAPISoap() {
        return super.getPort(new QName("http://localhost", "EasyPayAPISoap"), EasyPayAPISoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EasyPayAPISoap
     */
    @WebEndpoint(name = "EasyPayAPISoap")
    public EasyPayAPISoap getEasyPayAPISoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://localhost", "EasyPayAPISoap"), EasyPayAPISoap.class, features);
    }

    /**
     * 
     * @return
     *     returns EasyPayAPISoap
     */
    @WebEndpoint(name = "EasyPayAPISoap12")
    public EasyPayAPISoap getEasyPayAPISoap12() {
        return super.getPort(new QName("http://localhost", "EasyPayAPISoap12"), EasyPayAPISoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EasyPayAPISoap
     */
    @WebEndpoint(name = "EasyPayAPISoap12")
    public EasyPayAPISoap getEasyPayAPISoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://localhost", "EasyPayAPISoap12"), EasyPayAPISoap.class, features);
    }

}
