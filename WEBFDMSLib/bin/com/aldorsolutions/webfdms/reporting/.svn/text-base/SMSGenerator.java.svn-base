/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 * CJongs
 */
package com.aldorsolutions.webfdms.reporting;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Properties;
import java.util.StringTokenizer;
import java.util.TimerTask;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.Message.RecipientType;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.aldorassist.webfdms.model.ReportSchedulingDTO;
import com.aldorassist.webfdms.model.SMSSchedulingDTO;
import com.aldorsolutions.webfdms.beans.FdmsDb;
import com.aldorsolutions.webfdms.company.model.CompanyDTO;
import com.aldorsolutions.webfdms.reporting.dao.ReportSchedulingDAO;
import com.aldorsolutions.webfdms.reporting.dao.SMSSchedulingDAO;
import com.aldorsolutions.webfdms.util.CrystalReportManagerBeanScheduling;
import com.aldorsolutions.webfdms.util.DAO;
import com.aldorsolutions.webfdms.util.FormatDate;
import com.aldorsolutions.webfdms.util.UtilSingleton;
import com.callfire.SMSService.ArrayOfString;
import com.callfire.SMSService.ObjectFactory;
import com.callfire.SMSService.SMSService;
import com.eclerisy.primemessage.common.PMConstant;
import com.eclerisy.primemessage.sdk.PrimeMessage;

/**
 * MyEclipse Struts Creation date: 04-17-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="failed" path="/login.jsp"
 * @struts.action-forward name="success" path="/main.jsp"
 */

public class SMSGenerator extends TimerTask {
	/*
	 * Generated Methods
	 */

	
	public static int ScheID;

	public SMSGenerator(int scheduleID) {
		super();
		ScheID = scheduleID;
	}

	public void run() {
		String pageName = "";

		int scheduleID = ScheID;

		SMSSchedulingDTO smsSche = new SMSSchedulingDTO();
		SMSSchedulingDAO smsScheDAo = new SMSSchedulingDAO(DAO.DB_FDMSCOMMON);
		smsSche = smsScheDAo.getSMSCommonScheduling(scheduleID);

		if ((smsSche != null) && ( (smsSche.getStatus().compareToIgnoreCase("Q") == 0) || (smsSche.getStatus().compareToIgnoreCase("R") == 0)) ) {

			try {
			// get in to run the scheduling we need to update Q to R and set the starting time
			smsSche.setStatus("R");
			long startingTimestamp = System.currentTimeMillis();
			smsSche.setStartDateTime(startingTimestamp);
			try {
				smsScheDAo.updateSMSScheduling(smsSche);
			}catch (Exception pe) {
					pe.printStackTrace();
			}
				
				String msg = "";
			 msg = FdmsDb.getInstance().getSMSSql(smsSche.getSMSSqlId(),smsSche.getDbLookup(), smsSche.getLocationId());
//			 msg = "test";
	    		
	         String message = msg;
	         message = smsSche.getStartMessage()+" "+message+" "+smsSche.getEndMessage();
	         
			//this is for callfire (www.callfire.com).	
				SMSService service = new SMSService();
				ArrayOfString numbers = new ObjectFactory().createArrayOfString();
//				numbers.getString().add("9405942322,HI Chai!");
				numbers.getString().add(smsSche.getAreaCode()+smsSche.getPhone()+","+message);
				String key = "d8b7227f26bbdf34fa40498f7aac2e5a1f880320";
				long compaignid = service.getSMSServiceHttpPort().sendSMSCampaign(key, numbers, "hi");
			
				//we finish up the task.
				
				smsSche.setStatus("S");
				long createdTimestamp = System.currentTimeMillis();
				smsSche.setStopDateTime(createdTimestamp);
				smsSche.setSentMessage(message);
				
			}catch (Exception pe) {
				smsSche.setStatus("E");
				long createdTimestamp = System.currentTimeMillis();
				smsSche.setStopDateTime(createdTimestamp);
			}		
					
			}else {
				smsSche.setStatus("E");
				long createdTimestamp = System.currentTimeMillis();
				smsSche.setStopDateTime(createdTimestamp);
			}
			
			try {
				smsScheDAo.updateSMSScheduling(smsSche);
			}catch (Exception pe) {
	
			}
			
	}

	private void sendSMS(SMSSchedulingDTO smsSche, CompanyDTO company) {
	      try{

	        }catch (Exception e){
	        	
	        }
		
	}

	private String getMessage(SMSSchedulingDTO smsSche, CompanyDTO company) {
		String msg = "";
		SMSSchedulingDAO smsScheDAo = new SMSSchedulingDAO(company.getDbLookup());
		msg = smsScheDAo.getSQLMessage(smsSche.getSqlScript());
		
		return msg;
	}
			
	
}