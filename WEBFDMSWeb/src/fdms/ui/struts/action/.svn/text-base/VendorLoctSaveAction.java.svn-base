/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package fdms.ui.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

//import org.apache.struts.action.ActionRedirect;

import fdms.ui.struts.form.VendorLoctEditForm;
import com.aldorsolutions.webfdms.beans.DbUserSession;
import com.aldorsolutions.webfdms.checkwriter.dao.ApVendorDAO;
import com.aldorsolutions.webfdms.checkwriter.dao.ApVendorLocationDAO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorDTO;
import com.aldorsolutions.webfdms.checkwriter.model.ApVendorLocationDTO;
import com.aldorsolutions.webfdms.util.SessionValueKeys;

/** 
 * MyEclipse Struts
 * Creation date: 06-28-2007
 * 
 * XDoclet definition:
 * @struts.action path="/vendorLocEdit" name="vendorLocEditForm" input="/acct/vendorLocEdit.jsp" scope="request" validate="true"
 */
public class VendorLoctSaveAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		VendorLoctEditForm vendorLoctEditForm = (VendorLoctEditForm) form;
		ActionErrors errors = new ActionErrors();
		HttpSession session = request.getSession();
		DbUserSession user = (DbUserSession) session.getAttribute(SessionValueKeys.DB_USER);

		if ( "Cancel".equals(vendorLoctEditForm.getDirection() ) ) {
			session.setAttribute("sessionVendorID", String.valueOf(vendorLoctEditForm.getVendorID()));
			//request.setAttribute("vendorID", String.valueOf(vendorLocRemoveForm.getVendorID()) );		
			request.setAttribute("vendorID", String.valueOf(vendorLoctEditForm.getVendorID()));
			return mapping.findForward("showVendorEditDisplay");
		}
		
		
		ApVendorLocationDAO vendorLocDao = new ApVendorLocationDAO(user);
		ApVendorLocationDTO vendorLoc = vendorLocDao.getApVendorLocation(vendorLoctEditForm.getVendorLocationID());
		
		try {
			//InvoiceManager imvMgr = new InvoiceManager();
			//DbApAccount account = imvMgr.getAccount(request, vendorLocEditForm.getDefaultAcct());
			//vendorLoc.setDefaultAcct(FormatNumber.parseInteger(account.getAccountNumber()));
			
			ApVendorDAO vendorDao = new ApVendorDAO(user);
			ApVendorDTO vendor = vendorDao.getApVendor(vendorLoctEditForm.getVendorID());
			vendorLoc.setDefaultAcctID(vendor.getDefaultAcctID());
			
		} catch ( Exception e ) {
			errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.exception", e.getMessage()) );
			saveErrors(request, errors);
		}		
		
		ArrayList<ApVendorLocationDTO> locationlist = (ArrayList) vendorLocDao.getApVendorLocationByVendorID(vendorLoctEditForm.getVendorID());
		
		boolean hasSet = false;
		for (ApVendorLocationDTO location: locationlist ) {
			if (location.getLocaleID() == vendorLoctEditForm.getLocaleID() && location.getLocationID() == vendorLoctEditForm.getLocationID()) {
				hasSet = true;
				break;
			}
		}
		//vendorLoc.setDefaultAcct(vendorLocEditForm.getDefaultAcct());
		if (!hasSet) {
			vendorLoc.setLocaleID(vendorLoctEditForm.getLocaleID());
			vendorLoc.setLocationID(vendorLoctEditForm.getLocationID());
			vendorLoc.setVendorID(vendorLoctEditForm.getVendorID());
			vendorLoc.setVendorLocationID(vendorLoctEditForm.getVendorLocationID());
			vendorLocDao.updateApVendorLocation(vendorLoc);
		}
//		else {
//			errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("error.acct.vendor.DuplicateLocation", "") );
//			saveErrors(request, errors);
//			
//			return (mapping.findForward("showLoctEdit"));
//			
//		}
		session.setAttribute("sessionVendorID", String.valueOf(vendorLoctEditForm.getVendorID()));	
		request.setAttribute("vendorID", String.valueOf(vendorLoctEditForm.getVendorID()));
		return mapping.findForward("showVendorEditDisplay");
	}
		
}